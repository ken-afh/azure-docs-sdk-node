### YamlMime:TSType
name: SpeechConfigImpl
uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl
package: microsoft-cognitiveservices-speech-sdk
summary: ''
fullName: SpeechConfigImpl
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: SpeechConfigImpl()
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.constructor
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: new SpeechConfigImpl()
properties:
  - name: authorizationToken
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.authorizationToken
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: authorizationToken
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string authorizationToken
      return:
        description: ''
        type: string
  - name: autoDetectSourceLanguages
    uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.autoDetectSourceLanguages
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: autoDetectSourceLanguages
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string autoDetectSourceLanguages
      return:
        description: ''
        type: string
  - name: endPoint
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.endPoint
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: endPoint
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: URL endPoint
      return:
        description: ''
        type: URL
  - name: endpointId
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.endpointId
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: endpointId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string endpointId
      return:
        description: ''
        type: string
  - name: outputFormat
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.outputFormat
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: outputFormat
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: OutputFormat outputFormat
      return:
        description: ''
        type: <xref uid="microsoft-cognitiveservices-speech-sdk.OutputFormat" />
  - name: properties
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.properties
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: properties
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: PropertyCollection properties
      return:
        description: ''
        type: >-
          <xref uid="microsoft-cognitiveservices-speech-sdk.PropertyCollection"
          />
  - name: region
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.region
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: region
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string region
      return:
        description: ''
        type: string
  - name: speechRecognitionLanguage
    uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.speechRecognitionLanguage
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: speechRecognitionLanguage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string speechRecognitionLanguage
      return:
        description: ''
        type: string
  - name: speechSynthesisLanguage
    uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.speechSynthesisLanguage
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: speechSynthesisLanguage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string speechSynthesisLanguage
      return:
        description: ''
        type: string
  - name: speechSynthesisOutputFormat
    uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.speechSynthesisOutputFormat
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: speechSynthesisOutputFormat
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: SpeechSynthesisOutputFormat speechSynthesisOutputFormat
      return:
        description: ''
        type: >-
          <xref
          uid="microsoft-cognitiveservices-speech-sdk.SpeechSynthesisOutputFormat"
          />
  - name: speechSynthesisVoiceName
    uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.speechSynthesisVoiceName
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: speechSynthesisVoiceName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string speechSynthesisVoiceName
      return:
        description: ''
        type: string
  - name: subscriptionKey
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.subscriptionKey
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: subscriptionKey
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string subscriptionKey
      return:
        description: ''
        type: string
inheritedMethods:
  - name: close()
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.close
    package: microsoft-cognitiveservices-speech-sdk
    summary: Closes the configuration.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function close()
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SpeechConfig.close](xref:microsoft-cognitiveservices-speech-sdk.SpeechConfig.close)
  - name: 'fromAuthorizationToken(string, string)'
    uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.fromAuthorizationToken
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Creates an instance of the speech factory with specified initial
      authorization token and region.

      Note: The caller needs to ensure that the authorization token is valid.
      Before the authorization token

      expires, the caller needs to refresh it by calling this setter with a new
      valid token.

      Note: Please use a token derived from your LanguageUnderstanding
      subscription key in case you want

      to use the Intent recognizer. As configuration values are copied when
      creating a new recognizer,

      the new token value will not apply to recognizers that have already been
      created. For recognizers

      that have been created before, you need to set authorization token of the
      corresponding recognizer

      to refresh the token. Otherwise, the recognizers will encounter errors
      during recognition.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function fromAuthorizationToken(authorizationToken: string,
        region: string): SpeechConfig
      parameters:
        - id: authorizationToken
          type: string
          description: The initial authorization token.
        - id: region
          type: string
          description: >-
            The region name (see the <a
            href="https://aka.ms/csspeech/region">region page</a>).
      return:
        description: A speech factory instance.
        type: <xref uid="microsoft-cognitiveservices-speech-sdk.SpeechConfig" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SpeechConfig.fromAuthorizationToken](xref:microsoft-cognitiveservices-speech-sdk.SpeechConfig.fromAuthorizationToken)
  - name: 'fromEndpoint(URL, string)'
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.fromEndpoint
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Creates an instance of the speech config with specified endpoint and
      subscription key.

      This method is intended only for users who use a non-standard service
      endpoint or parameters.

      Note: Please use your LanguageUnderstanding subscription key in case you
      want to use the Intent recognizer.

      Note: The query parameters specified in the endpoint URL are not changed,
      even if they are set by any other APIs.

      For example, if language is defined in the uri as query parameter
      "language=de-DE", and also set by

      SpeechConfig.speechRecognitionLanguage = "en-US", the language setting in
      uri takes precedence,

      and the effective language is "de-DE". Only the parameters that are not
      specified in the

      endpoint URL can be set by other APIs.

      Note: To use authorization token with fromEndpoint, pass an empty string
      to the subscriptionKey in the

      fromEndpoint method, and then set authorizationToken="token" on the
      created SpeechConfig instance to

      use the authorization token.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function fromEndpoint(endpoint: URL, subscriptionKey?: string):
        SpeechConfig
      parameters:
        - id: endpoint
          type: URL
          description: The service endpoint to connect to.
        - id: subscriptionKey
          type: string
          description: >-
            The subscription key. If a subscription key is not specified, an
            authorization token must be set.
      return:
        description: A speech factory instance.
        type: <xref uid="microsoft-cognitiveservices-speech-sdk.SpeechConfig" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SpeechConfig.fromEndpoint](xref:microsoft-cognitiveservices-speech-sdk.SpeechConfig.fromEndpoint)
  - name: 'fromHost(URL, string)'
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.fromHost
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Creates an instance of the speech config with specified host and
      subscription key.

      This method is intended only for users who use a non-default service host.
      Standard resource path will be assumed.

      For services with a non-standard resource path or no path at all, use
      fromEndpoint instead.

      Note: Query parameters are not allowed in the host URI and must be set by
      other APIs.

      Note: To use an authorization token with fromHost, use fromHost(URL),

      and then set the AuthorizationToken property on the created SpeechConfig
      instance.

      Note: Added in version 1.9.0.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function fromHost(hostName: URL, subscriptionKey?: string):
        SpeechConfig
      parameters:
        - id: hostName
          type: URL
          description: ''
        - id: subscriptionKey
          type: string
          description: >-
            The subscription key. If a subscription key is not specified, an
            authorization token must be set.
      return:
        description: A speech factory instance.
        type: <xref uid="microsoft-cognitiveservices-speech-sdk.SpeechConfig" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SpeechConfig.fromHost](xref:microsoft-cognitiveservices-speech-sdk.SpeechConfig.fromHost)
  - name: 'fromSubscription(string, string)'
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.fromSubscription
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Static instance of SpeechConfig returned by passing subscriptionKey and
      service region.

      Note: Please use your LanguageUnderstanding subscription key in case you
      want to use the Intent recognizer.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function fromSubscription(subscriptionKey: string, region:
        string): SpeechConfig
      parameters:
        - id: subscriptionKey
          type: string
          description: The subscription key.
        - id: region
          type: string
          description: >-
            The region name (see the <a
            href="https://aka.ms/csspeech/region">region page</a>).
      return:
        description: The speech factory
        type: <xref uid="microsoft-cognitiveservices-speech-sdk.SpeechConfig" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SpeechConfig.fromSubscription](xref:microsoft-cognitiveservices-speech-sdk.SpeechConfig.fromSubscription)
methods:
  - name: clone()
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.clone
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function clone(): SpeechConfigImpl'
      return:
        description: ''
        type: <xref uid="microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl" />
  - name: enableAudioLogging()
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.enableAudioLogging
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function enableAudioLogging()
  - name: enableDictation()
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.enableDictation
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function enableDictation()
  - name: 'getProperty(string | PropertyId, string)'
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.getProperty
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getProperty(name: string | PropertyId, def?: string): string'
      parameters:
        - id: name
          type: >-
            string | <xref
            uid="microsoft-cognitiveservices-speech-sdk.PropertyId" />
          description: ''
        - id: def
          type: string
          description: ''
      return:
        description: ''
        type: string
  - name: requestWordLevelTimestamps()
    uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.requestWordLevelTimestamps
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function requestWordLevelTimestamps()
  - name: setProfanity(ProfanityOption)
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.setProfanity
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setProfanity(profanity: ProfanityOption)'
      parameters:
        - id: profanity
          type: >-
            <xref uid="microsoft-cognitiveservices-speech-sdk.ProfanityOption"
            />
          description: ''
  - name: 'setProperty(string | PropertyId, string)'
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.setProperty
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setProperty(name: string | PropertyId, value: string)'
      parameters:
        - id: name
          type: >-
            string | <xref
            uid="microsoft-cognitiveservices-speech-sdk.PropertyId" />
          description: ''
        - id: value
          type: string
          description: ''
  - name: 'setProxy(string, number)'
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.setProxy
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setProxy(proxyHostName: string, proxyPort: number)'
      parameters:
        - id: proxyHostName
          type: string
          description: ''
        - id: proxyPort
          type: number
          description: ''
  - name: 'setProxy(string, number, string, string)'
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.setProxy_1
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setProxy(proxyHostName: string, proxyPort: number,
        proxyUserName: string, proxyPassword: string)
      parameters:
        - id: proxyHostName
          type: string
          description: ''
        - id: proxyPort
          type: number
          description: ''
        - id: proxyUserName
          type: string
          description: ''
        - id: proxyPassword
          type: string
          description: ''
  - name: 'setServiceProperty(string, string)'
    uid: microsoft-cognitiveservices-speech-sdk.SpeechConfigImpl.setServiceProperty
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setServiceProperty(name: string, value: string)'
      parameters:
        - id: name
          type: string
          description: ''
        - id: value
          type: string
          description: ''
extends: <xref uid="microsoft-cognitiveservices-speech-sdk.SpeechConfig" />
