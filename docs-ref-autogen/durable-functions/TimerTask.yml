### YamlMime:TSType
name: TimerTask
uid: durable-functions.TimerTask
package: durable-functions
summary: |+
  Returned from [[DurableOrchestrationClient]].[[createTimer]] if the call is
  not `yield`-ed. Represents a pending timer. See documentation on [[Task]]
  for more information.
  All pending timers must be completed or canceled for an orchestration to
  complete.


  **Example**

  Cancel a timer
  ```javascript
  // calculate expiration date
  const timeoutTask = context.df.createTimer(expirationDate);

  // do some work

  if (!timeoutTask.isCompleted) {
      // An orchestration won't get marked as completed until all its scheduled
      // tasks have returned, or been cancelled. Therefore, it is important
      // to cancel timers when they're no longer needed
      timeoutTask.cancel();
  }
  ```



  **Example**

  Create a timeout
  ```javascript
  const now = Date.now();
  const expiration = new Date(now.valueOf()).setMinutes(now.getMinutes() + 30);

  const timeoutTask = context.df.createTimer(expirationDate);
  const otherTask = context.df.callActivity("DoWork");

  const winner = yield context.df.Task.any([timeoutTask, otherTask]);

  if (winner === otherTask) {
      // do some more work
  }

  if (!timeoutTask.isCompleted) {
      // An orchestration won't get marked as completed until all its scheduled
      // tasks have returned, or been cancelled. Therefore, it is important
      // to cancel timers when they're no longer needed
      timeoutTask.cancel();
  }
  ```

fullName: TimerTask
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: cancel
    uid: durable-functions.TimerTask.cancel
    package: durable-functions
    summary: |-
      Indicates the timer should be canceled. This request will execute on the
      next `yield` or `return` statement.
    fullName: cancel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cancel: () => void'
      return:
        description: ''
        type: () =&gt; void
  - name: isCanceled
    uid: durable-functions.TimerTask.isCanceled
    package: durable-functions
    summary: ''
    fullName: isCanceled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isCanceled: boolean'
      return:
        description: ''
        type: boolean
inheritedProperties:
  - name: isCompleted
    uid: durable-functions.TimerTask.isCompleted
    package: durable-functions
    summary: |-
      Whether the task has completed. Note that completion is not
      equivalent to success.
    fullName: isCompleted
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isCompleted: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Task.isCompleted](xref:durable-functions.Task.isCompleted)
  - name: isFaulted
    uid: durable-functions.TimerTask.isFaulted
    package: durable-functions
    summary: Whether the task faulted in some way due to error.
    fullName: isFaulted
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isFaulted: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Task.isFaulted](xref:durable-functions.Task.isFaulted)
  - name: result
    uid: durable-functions.TimerTask.result
    package: durable-functions
    summary: 'The result of the task, if completed. Otherwise `undefined`.'
    fullName: result
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'result?: unknown'
      return:
        description: ''
        type: unknown
    inheritanceDescription: '<b>Inherited From</b> [Task.result](xref:durable-functions.Task.result)'
extends: <xref uid="durable-functions.Task" />
