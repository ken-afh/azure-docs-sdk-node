### YamlMime:TSType
name: AgentPool
uid: '@azure/arm-containerservice.AgentPool'
package: '@azure/arm-containerservice'
summary: Agent Pool.
fullName: AgentPool
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: availabilityZones
    uid: '@azure/arm-containerservice.AgentPool.availabilityZones'
    package: '@azure/arm-containerservice'
    summary: >-
      The list of Availability zones to use for nodes. This can only be
      specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
    fullName: availabilityZones
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'availabilityZones?: string[]'
      return:
        description: ''
        type: 'string[]'
  - name: count
    uid: '@azure/arm-containerservice.AgentPool.count'
    package: '@azure/arm-containerservice'
    summary: >-
      Number of agents (VMs) to host docker containers. Allowed values must be
      in the range of 0 to 1000 (inclusive) for user pools and in the range of 1
      to 1000 (inclusive) for system pools. The default value is 1.
    fullName: count
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'count?: undefined | number'
      return:
        description: ''
        type: undefined | number
  - name: creationData
    uid: '@azure/arm-containerservice.AgentPool.creationData'
    package: '@azure/arm-containerservice'
    summary: >-
      CreationData to be used to specify the source Snapshot ID if the node pool
      will be created/upgraded using a snapshot.
    fullName: creationData
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'creationData?: CreationData'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.CreationData" />
  - name: currentOrchestratorVersion
    uid: '@azure/arm-containerservice.AgentPool.currentOrchestratorVersion'
    package: '@azure/arm-containerservice'
    summary: >-
      If orchestratorVersion is a fully specified version <major.minor.patch>,
      this field will be exactly equal to it. If orchestratorVersion is
      <major.minor>, this field will contain the full <major.minor.patch>
      version being used.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: currentOrchestratorVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'currentOrchestratorVersion?: undefined | string'
      return:
        description: ''
        type: undefined | string
  - name: enableAutoScaling
    uid: '@azure/arm-containerservice.AgentPool.enableAutoScaling'
    package: '@azure/arm-containerservice'
    summary: Whether to enable auto-scaler
    fullName: enableAutoScaling
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enableAutoScaling?: undefined | false | true'
      return:
        description: ''
        type: undefined | false | true
  - name: enableEncryptionAtHost
    uid: '@azure/arm-containerservice.AgentPool.enableEncryptionAtHost'
    package: '@azure/arm-containerservice'
    summary: >-
      This is only supported on certain VM sizes and in certain Azure regions.
      For more information, see:
      https://docs.microsoft.com/azure/aks/enable-host-encryption
    fullName: enableEncryptionAtHost
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enableEncryptionAtHost?: undefined | false | true'
      return:
        description: ''
        type: undefined | false | true
  - name: enableFips
    uid: '@azure/arm-containerservice.AgentPool.enableFips'
    package: '@azure/arm-containerservice'
    summary: >-
      See [Add a FIPS-enabled node
      pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview)
      for more details.
    fullName: enableFips
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enableFips?: undefined | false | true'
      return:
        description: ''
        type: undefined | false | true
  - name: enableNodePublicIP
    uid: '@azure/arm-containerservice.AgentPool.enableNodePublicIP'
    package: '@azure/arm-containerservice'
    summary: >-
      Some scenarios may require nodes in a node pool to receive their own
      dedicated public IP addresses. A common scenario is for gaming workloads,
      where a console needs to make a direct connection to a cloud virtual
      machine to minimize hops. For more information see [assigning a public IP
      per
      node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools).
      The default is false.
    fullName: enableNodePublicIP
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enableNodePublicIP?: undefined | false | true'
      return:
        description: ''
        type: undefined | false | true
  - name: enableUltraSSD
    uid: '@azure/arm-containerservice.AgentPool.enableUltraSSD'
    package: '@azure/arm-containerservice'
    summary: Whether to enable UltraSSD
    fullName: enableUltraSSD
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enableUltraSSD?: undefined | false | true'
      return:
        description: ''
        type: undefined | false | true
  - name: gpuInstanceProfile
    uid: '@azure/arm-containerservice.AgentPool.gpuInstanceProfile'
    package: '@azure/arm-containerservice'
    summary: >-
      GPUInstanceProfile to be used to specify GPU MIG instance profile for
      supported GPU VM SKU.
    fullName: gpuInstanceProfile
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'gpuInstanceProfile?: GPUInstanceProfile'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.GPUInstanceProfile" />
  - name: hostGroupID
    uid: '@azure/arm-containerservice.AgentPool.hostGroupID'
    package: '@azure/arm-containerservice'
    summary: >-
      This is of the form:
      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
      For more information see [Azure dedicated
      hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
    fullName: hostGroupID
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hostGroupID?: undefined | string'
      return:
        description: ''
        type: undefined | string
  - name: kubeletConfig
    uid: '@azure/arm-containerservice.AgentPool.kubeletConfig'
    package: '@azure/arm-containerservice'
    summary: The Kubelet configuration on the agent pool nodes.
    fullName: kubeletConfig
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'kubeletConfig?: KubeletConfig'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.KubeletConfig" />
  - name: kubeletDiskType
    uid: '@azure/arm-containerservice.AgentPool.kubeletDiskType'
    package: '@azure/arm-containerservice'
    summary: >-
      Determines the placement of emptyDir volumes, container runtime data root,
      and Kubelet ephemeral storage.
    fullName: kubeletDiskType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'kubeletDiskType?: KubeletDiskType'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.KubeletDiskType" />
  - name: linuxOSConfig
    uid: '@azure/arm-containerservice.AgentPool.linuxOSConfig'
    package: '@azure/arm-containerservice'
    summary: The OS configuration of Linux agent nodes.
    fullName: linuxOSConfig
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'linuxOSConfig?: LinuxOSConfig'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.LinuxOSConfig" />
  - name: maxCount
    uid: '@azure/arm-containerservice.AgentPool.maxCount'
    package: '@azure/arm-containerservice'
    summary: The maximum number of nodes for auto-scaling
    fullName: maxCount
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxCount?: undefined | number'
      return:
        description: ''
        type: undefined | number
  - name: maxPods
    uid: '@azure/arm-containerservice.AgentPool.maxPods'
    package: '@azure/arm-containerservice'
    summary: The maximum number of pods that can run on a node.
    fullName: maxPods
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxPods?: undefined | number'
      return:
        description: ''
        type: undefined | number
  - name: minCount
    uid: '@azure/arm-containerservice.AgentPool.minCount'
    package: '@azure/arm-containerservice'
    summary: The minimum number of nodes for auto-scaling
    fullName: minCount
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'minCount?: undefined | number'
      return:
        description: ''
        type: undefined | number
  - name: mode
    uid: '@azure/arm-containerservice.AgentPool.mode'
    package: '@azure/arm-containerservice'
    summary: >-
      A cluster must have at least one 'System' Agent Pool at all times. For
      additional information on agent pool restrictions and best practices, see:
      https://docs.microsoft.com/azure/aks/use-system-pools
    fullName: mode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'mode?: AgentPoolMode'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.AgentPoolMode" />
  - name: nodeImageVersion
    uid: '@azure/arm-containerservice.AgentPool.nodeImageVersion'
    package: '@azure/arm-containerservice'
    summary: >-
      The version of node image

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: nodeImageVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'nodeImageVersion?: undefined | string'
      return:
        description: ''
        type: undefined | string
  - name: nodeLabels
    uid: '@azure/arm-containerservice.AgentPool.nodeLabels'
    package: '@azure/arm-containerservice'
    summary: The node labels to be persisted across all nodes in agent pool.
    fullName: nodeLabels
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'nodeLabels?: undefined | [key: string]: string'
      return:
        description: ''
        type: 'undefined | [key: string]: string'
  - name: nodePublicIPPrefixID
    uid: '@azure/arm-containerservice.AgentPool.nodePublicIPPrefixID'
    package: '@azure/arm-containerservice'
    summary: >-
      This is of the form:
      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
    fullName: nodePublicIPPrefixID
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'nodePublicIPPrefixID?: undefined | string'
      return:
        description: ''
        type: undefined | string
  - name: nodeTaints
    uid: '@azure/arm-containerservice.AgentPool.nodeTaints'
    package: '@azure/arm-containerservice'
    summary: >-
      The taints added to new nodes during node pool create and scale. For
      example, key=value:NoSchedule.
    fullName: nodeTaints
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'nodeTaints?: string[]'
      return:
        description: ''
        type: 'string[]'
  - name: orchestratorVersion
    uid: '@azure/arm-containerservice.AgentPool.orchestratorVersion'
    package: '@azure/arm-containerservice'
    summary: >-
      Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor>
      (e.g. 1.20) are supported. When <major.minor> is specified, the latest
      supported GA patch version is chosen automatically. Updating the cluster
      with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14)
      will not trigger an upgrade, even if a newer patch version is available.
      As a best practice, you should upgrade all node pools in an AKS cluster to
      the same Kubernetes version. The node pool version must have the same
      major version as the control plane. The node pool minor version must be
      within two minor versions of the control plane version. The node pool
      version cannot be greater than the control plane version. For more
      information see [upgrading a node
      pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
    fullName: orchestratorVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'orchestratorVersion?: undefined | string'
      return:
        description: ''
        type: undefined | string
  - name: osDiskSizeGB
    uid: '@azure/arm-containerservice.AgentPool.osDiskSizeGB'
    package: '@azure/arm-containerservice'
    summary: >-
      OS Disk Size in GB to be used to specify the disk size for every machine
      in the master/agent pool. If you specify 0, it will apply the default
      osDisk size according to the vmSize specified.
    fullName: osDiskSizeGB
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'osDiskSizeGB?: undefined | number'
      return:
        description: ''
        type: undefined | number
  - name: osDiskType
    uid: '@azure/arm-containerservice.AgentPool.osDiskType'
    package: '@azure/arm-containerservice'
    summary: >-
      The default is 'Ephemeral' if the VM supports it and has a cache disk
      larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'.
      May not be changed after creation. For more information see [Ephemeral
      OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
    fullName: osDiskType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'osDiskType?: OSDiskType'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.OSDiskType" />
  - name: osSKU
    uid: '@azure/arm-containerservice.AgentPool.osSKU'
    package: '@azure/arm-containerservice'
    summary: >-
      Specifies an OS SKU. This value must not be specified if OSType is
      Windows.
    fullName: osSKU
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'osSKU?: Ossku'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.Ossku" />
  - name: osType
    uid: '@azure/arm-containerservice.AgentPool.osType'
    package: '@azure/arm-containerservice'
    summary: The operating system type. The default is Linux.
    fullName: osType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'osType?: OSType'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.OSType" />
  - name: podSubnetID
    uid: '@azure/arm-containerservice.AgentPool.podSubnetID'
    package: '@azure/arm-containerservice'
    summary: >-
      If omitted, pod IPs are statically assigned on the node subnet (see
      vnetSubnetID for more details). This is of the form:
      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
    fullName: podSubnetID
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'podSubnetID?: undefined | string'
      return:
        description: ''
        type: undefined | string
  - name: powerState
    uid: '@azure/arm-containerservice.AgentPool.powerState'
    package: '@azure/arm-containerservice'
    summary: >-
      When an Agent Pool is first created it is initially Running. The Agent
      Pool can be stopped by setting this field to Stopped. A stopped Agent Pool
      stops all of its VMs and does not accrue billing charges. An Agent Pool
      can only be stopped if it is Running and provisioning state is Succeeded
    fullName: powerState
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'powerState?: PowerState'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.PowerState" />
  - name: provisioningState
    uid: '@azure/arm-containerservice.AgentPool.provisioningState'
    package: '@azure/arm-containerservice'
    summary: >-
      The current deployment or provisioning state.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: provisioningState
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'provisioningState?: undefined | string'
      return:
        description: ''
        type: undefined | string
  - name: proximityPlacementGroupID
    uid: '@azure/arm-containerservice.AgentPool.proximityPlacementGroupID'
    package: '@azure/arm-containerservice'
    summary: The ID for Proximity Placement Group.
    fullName: proximityPlacementGroupID
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'proximityPlacementGroupID?: undefined | string'
      return:
        description: ''
        type: undefined | string
  - name: scaleDownMode
    uid: '@azure/arm-containerservice.AgentPool.scaleDownMode'
    package: '@azure/arm-containerservice'
    summary: >-
      This also effects the cluster autoscaler behavior. If not specified, it
      defaults to Delete.
    fullName: scaleDownMode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'scaleDownMode?: ScaleDownMode'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.ScaleDownMode" />
  - name: scaleSetEvictionPolicy
    uid: '@azure/arm-containerservice.AgentPool.scaleSetEvictionPolicy'
    package: '@azure/arm-containerservice'
    summary: >-
      This cannot be specified unless the scaleSetPriority is 'Spot'. If not
      specified, the default is 'Delete'.
    fullName: scaleSetEvictionPolicy
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'scaleSetEvictionPolicy?: ScaleSetEvictionPolicy'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.ScaleSetEvictionPolicy" />
  - name: scaleSetPriority
    uid: '@azure/arm-containerservice.AgentPool.scaleSetPriority'
    package: '@azure/arm-containerservice'
    summary: >-
      The Virtual Machine Scale Set priority. If not specified, the default is
      'Regular'.
    fullName: scaleSetPriority
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'scaleSetPriority?: ScaleSetPriority'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.ScaleSetPriority" />
  - name: spotMaxPrice
    uid: '@azure/arm-containerservice.AgentPool.spotMaxPrice'
    package: '@azure/arm-containerservice'
    summary: >-
      Possible values are any decimal value greater than zero or -1 which
      indicates the willingness to pay any on-demand price. For more details on
      spot pricing, see [spot VMs
      pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
    fullName: spotMaxPrice
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'spotMaxPrice?: undefined | number'
      return:
        description: ''
        type: undefined | number
  - name: tags
    uid: '@azure/arm-containerservice.AgentPool.tags'
    package: '@azure/arm-containerservice'
    summary: The tags to be persisted on the agent pool virtual machine scale set.
    fullName: tags
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tags?: undefined | [key: string]: string'
      return:
        description: ''
        type: 'undefined | [key: string]: string'
  - name: typePropertiesType
    uid: '@azure/arm-containerservice.AgentPool.typePropertiesType'
    package: '@azure/arm-containerservice'
    summary: The type of Agent Pool.
    fullName: typePropertiesType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'typePropertiesType?: AgentPoolType'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.AgentPoolType" />
  - name: upgradeSettings
    uid: '@azure/arm-containerservice.AgentPool.upgradeSettings'
    package: '@azure/arm-containerservice'
    summary: Settings for upgrading the agentpool
    fullName: upgradeSettings
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'upgradeSettings?: AgentPoolUpgradeSettings'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.AgentPoolUpgradeSettings" />
  - name: vmSize
    uid: '@azure/arm-containerservice.AgentPool.vmSize'
    package: '@azure/arm-containerservice'
    summary: >-
      VM size availability varies by region. If a node contains insufficient
      compute resources (memory, cpu, etc) pods might fail to run correctly. For
      more details on restricted VM sizes, see:
      https://docs.microsoft.com/azure/aks/quotas-skus-regions
    fullName: vmSize
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'vmSize?: undefined | string'
      return:
        description: ''
        type: undefined | string
  - name: vnetSubnetID
    uid: '@azure/arm-containerservice.AgentPool.vnetSubnetID'
    package: '@azure/arm-containerservice'
    summary: >-
      If this is not specified, a VNET and subnet will be generated and used. If
      no podSubnetID is specified, this applies to nodes and pods, otherwise it
      applies to just nodes. This is of the form:
      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
    fullName: vnetSubnetID
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'vnetSubnetID?: undefined | string'
      return:
        description: ''
        type: undefined | string
  - name: workloadRuntime
    uid: '@azure/arm-containerservice.AgentPool.workloadRuntime'
    package: '@azure/arm-containerservice'
    summary: Determines the type of workload a node can run.
    fullName: workloadRuntime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'workloadRuntime?: WorkloadRuntime'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.WorkloadRuntime" />
inheritedProperties:
  - name: id
    uid: '@azure/arm-containerservice.AgentPool.id'
    package: '@azure/arm-containerservice'
    summary: >-
      Resource ID.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id?: undefined | string'
      return:
        description: ''
        type: undefined | string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SubResource.id](xref:@azure/arm-containerservice.SubResource.id)
  - name: name
    uid: '@azure/arm-containerservice.AgentPool.name'
    package: '@azure/arm-containerservice'
    summary: >-
      The name of the resource that is unique within a resource group. This name
      can be used to access the resource.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: name
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name?: undefined | string'
      return:
        description: ''
        type: undefined | string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SubResource.name](xref:@azure/arm-containerservice.SubResource.name)
  - name: type
    uid: '@azure/arm-containerservice.AgentPool.type'
    package: '@azure/arm-containerservice'
    summary: >-
      Resource type

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'type?: undefined | string'
      return:
        description: ''
        type: undefined | string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SubResource.type](xref:@azure/arm-containerservice.SubResource.type)
extends: <xref uid="@azure/arm-containerservice.SubResource" />
