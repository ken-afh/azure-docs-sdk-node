### YamlMime:TSType
name: MicrophoneButtonProps
uid: '@azure/communication-react.MicrophoneButtonProps'
package: '@azure/communication-react'
summary: 'Props for <xref:MicrophoneButton>.'
fullName: MicrophoneButtonProps
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: onToggleMicrophone
    uid: '@azure/communication-react.MicrophoneButtonProps.onToggleMicrophone'
    package: '@azure/communication-react'
    summary: >-
      Utility property for using this component with `communication react
      eventHandlers`.

      Maps directly to the `onClick` property.
    fullName: onToggleMicrophone
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onToggleMicrophone?: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: strings
    uid: '@azure/communication-react.MicrophoneButtonProps.strings'
    package: '@azure/communication-react'
    summary: Optional strings to override in component
    fullName: strings
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'strings?: Partial<MicrophoneButtonStrings>'
      return:
        description: ''
        type: >-
          Partial&lt;<xref
          uid="@azure/communication-react.MicrophoneButtonStrings" />&gt;
inheritedProperties:
  - name: about
    uid: '@azure/communication-react.MicrophoneButtonProps.about'
    package: '@azure/communication-react'
    summary: ''
    fullName: about
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'about?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.about
  - name: accept
    uid: '@azure/communication-react.MicrophoneButtonProps.accept'
    package: '@azure/communication-react'
    summary: ''
    fullName: accept
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'accept?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.accept
  - name: acceptCharset
    uid: '@azure/communication-react.MicrophoneButtonProps.acceptCharset'
    package: '@azure/communication-react'
    summary: ''
    fullName: acceptCharset
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'acceptCharset?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.acceptCharset
  - name: accessKey
    uid: '@azure/communication-react.MicrophoneButtonProps.accessKey'
    package: '@azure/communication-react'
    summary: ''
    fullName: accessKey
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'accessKey?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.accessKey
  - name: action
    uid: '@azure/communication-react.MicrophoneButtonProps.action'
    package: '@azure/communication-react'
    summary: ''
    fullName: action
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'action?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.action
  - name: allowDisabledFocus
    uid: '@azure/communication-react.MicrophoneButtonProps.allowDisabledFocus'
    package: '@azure/communication-react'
    summary: Whether the button can have focus in disabled mode
    fullName: allowDisabledFocus
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'allowDisabledFocus?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IButtonProps.allowDisabledFocus
  - name: allowFullScreen
    uid: '@azure/communication-react.MicrophoneButtonProps.allowFullScreen'
    package: '@azure/communication-react'
    summary: ''
    fullName: allowFullScreen
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'allowFullScreen?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.allowFullScreen
  - name: allowTransparency
    uid: '@azure/communication-react.MicrophoneButtonProps.allowTransparency'
    package: '@azure/communication-react'
    summary: ''
    fullName: allowTransparency
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'allowTransparency?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.allowTransparency
  - name: alt
    uid: '@azure/communication-react.MicrophoneButtonProps.alt'
    package: '@azure/communication-react'
    summary: ''
    fullName: alt
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'alt?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.alt
  - name: aria-activedescendant
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-activedescendant'
    package: '@azure/communication-react'
    summary: >-
      Identifies the currently active element when DOM focus is on a composite
      widget, textbox, group, or application.
    fullName: aria-activedescendant
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-activedescendant?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-activedescendant'
  - name: aria-atomic
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-atomic'
    package: '@azure/communication-react'
    summary: >-
      Indicates whether assistive technologies will present all, or only parts
      of, the changed region based on the change notifications defined by the
      aria-relevant attribute.
    fullName: aria-atomic
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-atomic?: boolean | "false" | "true" | undefined'
      return:
        description: ''
        type: boolean | "false" | "true" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-atomic'
  - name: aria-autocomplete
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-autocomplete'
    package: '@azure/communication-react'
    summary: >-
      Indicates whether inputting text could trigger display of one or more
      predictions of the user's intended value for an input and specifies how
      predictions would be

      presented if they are made.
    fullName: aria-autocomplete
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-autocomplete?: "none" | "inline" | "list" | "both" | undefined'
      return:
        description: ''
        type: '"none" | "inline" | "list" | "both" | undefined'
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-autocomplete'
  - name: aria-busy
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-busy'
    package: '@azure/communication-react'
    summary: >-
      Indicates an element is being modified and that assistive technologies MAY
      want to wait until the modifications are complete before exposing them to
      the user.
    fullName: aria-busy
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-busy?: boolean | "false" | "true" | undefined'
      return:
        description: ''
        type: boolean | "false" | "true" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-busy'
  - name: aria-checked
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-checked'
    package: '@azure/communication-react'
    summary: >-
      Indicates the current "checked" state of checkboxes, radio buttons, and
      other widgets.


      See aria-pressed @see aria-selected.
    fullName: aria-checked
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-checked?: boolean | "false" | "mixed" | "true" | undefined'
      return:
        description: ''
        type: boolean | "false" | "mixed" | "true" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-checked'
  - name: aria-colcount
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-colcount'
    package: '@azure/communication-react'
    summary: |-
      Defines the total number of columns in a table, grid, or treegrid.

      See aria-colindex.
    fullName: aria-colcount
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-colcount?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-colcount'
  - name: aria-colindex
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-colindex'
    package: '@azure/communication-react'
    summary: >-
      Defines an element's column index or position with respect to the total
      number of columns within a table, grid, or treegrid.


      See aria-colcount @see aria-colspan.
    fullName: aria-colindex
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-colindex?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-colindex'
  - name: aria-colspan
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-colspan'
    package: '@azure/communication-react'
    summary: >-
      Defines the number of columns spanned by a cell or gridcell within a
      table, grid, or treegrid.


      See aria-colindex @see aria-rowspan.
    fullName: aria-colspan
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-colspan?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-colspan'
  - name: aria-controls
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-controls'
    package: '@azure/communication-react'
    summary: >-
      Identifies the element (or elements) whose contents or presence are
      controlled by the current element.


      See aria-owns.
    fullName: aria-controls
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-controls?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-controls'
  - name: aria-current
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-current'
    package: '@azure/communication-react'
    summary: >-
      Indicates the element that represents the current item within a container
      or set of related elements.
    fullName: aria-current
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        aria-current?: boolean | "false" | "true" | "page" | "step" | "location"
        | "date" | "time" | undefined
      return:
        description: ''
        type: >-
          boolean | "false" | "true" | "page" | "step" | "location" | "date" |
          "time" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-current'
  - name: aria-describedby
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-describedby'
    package: '@azure/communication-react'
    summary: |-
      Identifies the element (or elements) that describes the object.

      See aria-labelledby
    fullName: aria-describedby
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-describedby?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-describedby'
  - name: aria-details
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-details'
    package: '@azure/communication-react'
    summary: >-
      Identifies the element that provides a detailed, extended description for
      the object.


      See aria-describedby.
    fullName: aria-details
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-details?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-details'
  - name: aria-disabled
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-disabled'
    package: '@azure/communication-react'
    summary: >-
      Indicates that the element is perceivable but disabled, so it is not
      editable or otherwise operable.


      See aria-hidden @see aria-readonly.
    fullName: aria-disabled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-disabled?: boolean | "false" | "true" | undefined'
      return:
        description: ''
        type: boolean | "false" | "true" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-disabled'
  - name: aria-dropeffect
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-dropeffect'
    package: '@azure/communication-react'
    summary: >-
      Indicates what functions can be performed when a dragged object is
      released on the drop target.
    fullName: aria-dropeffect
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: in ARIA 1.1
    syntax:
      content: >-
        aria-dropeffect?: "none" | "copy" | "execute" | "link" | "move" |
        "popup" | undefined
      return:
        description: ''
        type: '"none" | "copy" | "execute" | "link" | "move" | "popup" | undefined'
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-dropeffect'
  - name: aria-errormessage
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-errormessage'
    package: '@azure/communication-react'
    summary: |-
      Identifies the element that provides an error message for the object.

      See aria-invalid @see aria-describedby.
    fullName: aria-errormessage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-errormessage?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-errormessage'
  - name: aria-expanded
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-expanded'
    package: '@azure/communication-react'
    summary: >-
      Indicates whether the element, or another grouping element it controls, is
      currently expanded or collapsed.
    fullName: aria-expanded
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-expanded?: boolean | "false" | "true" | undefined'
      return:
        description: ''
        type: boolean | "false" | "true" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-expanded'
  - name: aria-flowto
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-flowto'
    package: '@azure/communication-react'
    summary: >-
      Identifies the next element (or elements) in an alternate reading order of
      content which, at the user's discretion,

      allows assistive technology to override the general default of reading in
      document source order.
    fullName: aria-flowto
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-flowto?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-flowto'
  - name: aria-grabbed
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-grabbed'
    package: '@azure/communication-react'
    summary: Indicates an element's "grabbed" state in a drag-and-drop operation.
    fullName: aria-grabbed
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: in ARIA 1.1
    syntax:
      content: 'aria-grabbed?: boolean | "false" | "true" | undefined'
      return:
        description: ''
        type: boolean | "false" | "true" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-grabbed'
  - name: aria-haspopup
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-haspopup'
    package: '@azure/communication-react'
    summary: >-
      Indicates the availability and type of interactive popup element, such as
      menu or dialog, that can be triggered by an element.
    fullName: aria-haspopup
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        aria-haspopup?: boolean | "false" | "true" | "menu" | "listbox" | "tree"
        | "grid" | "dialog" | undefined
      return:
        description: ''
        type: >-
          boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" |
          "dialog" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-haspopup'
  - name: aria-hidden
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-hidden'
    package: '@azure/communication-react'
    summary: |-
      Indicates whether the element is exposed to an accessibility API.

      See aria-disabled.
    fullName: aria-hidden
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-hidden?: boolean | "false" | "true" | undefined'
      return:
        description: ''
        type: boolean | "false" | "true" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-hidden'
  - name: aria-invalid
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-invalid'
    package: '@azure/communication-react'
    summary: >-
      Indicates the entered value does not conform to the format expected by the
      application.


      See aria-errormessage.
    fullName: aria-invalid
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        aria-invalid?: boolean | "false" | "true" | "grammar" | "spelling" |
        undefined
      return:
        description: ''
        type: boolean | "false" | "true" | "grammar" | "spelling" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-invalid'
  - name: aria-keyshortcuts
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-keyshortcuts'
    package: '@azure/communication-react'
    summary: >-
      Indicates keyboard shortcuts that an author has implemented to activate or
      give focus to an element.
    fullName: aria-keyshortcuts
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-keyshortcuts?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-keyshortcuts'
  - name: aria-label
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-label'
    package: '@azure/communication-react'
    summary: |-
      Defines a string value that labels the current element.

      See aria-labelledby.
    fullName: aria-label
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-label?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-label'
  - name: aria-labelledby
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-labelledby'
    package: '@azure/communication-react'
    summary: |-
      Identifies the element (or elements) that labels the current element.

      See aria-describedby.
    fullName: aria-labelledby
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-labelledby?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-labelledby'
  - name: aria-level
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-level'
    package: '@azure/communication-react'
    summary: Defines the hierarchical level of an element within a structure.
    fullName: aria-level
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-level?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-level'
  - name: aria-live
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-live'
    package: '@azure/communication-react'
    summary: >-
      Indicates that an element will be updated, and describes the types of
      updates the user agents, assistive technologies, and user can expect from
      the live region.
    fullName: aria-live
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-live?: "off" | "assertive" | "polite" | undefined'
      return:
        description: ''
        type: '"off" | "assertive" | "polite" | undefined'
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-live'
  - name: aria-modal
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-modal'
    package: '@azure/communication-react'
    summary: Indicates whether an element is modal when displayed.
    fullName: aria-modal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-modal?: boolean | "false" | "true" | undefined'
      return:
        description: ''
        type: boolean | "false" | "true" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-modal'
  - name: aria-multiline
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-multiline'
    package: '@azure/communication-react'
    summary: >-
      Indicates whether a text box accepts multiple lines of input or only a
      single line.
    fullName: aria-multiline
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-multiline?: boolean | "false" | "true" | undefined'
      return:
        description: ''
        type: boolean | "false" | "true" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-multiline'
  - name: aria-multiselectable
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-multiselectable'
    package: '@azure/communication-react'
    summary: >-
      Indicates that the user may select more than one item from the current
      selectable descendants.
    fullName: aria-multiselectable
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-multiselectable?: boolean | "false" | "true" | undefined'
      return:
        description: ''
        type: boolean | "false" | "true" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-multiselectable'
  - name: aria-orientation
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-orientation'
    package: '@azure/communication-react'
    summary: >-
      Indicates whether the element's orientation is horizontal, vertical, or
      unknown/ambiguous.
    fullName: aria-orientation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-orientation?: "horizontal" | "vertical" | undefined'
      return:
        description: ''
        type: '"horizontal" | "vertical" | undefined'
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-orientation'
  - name: aria-owns
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-owns'
    package: '@azure/communication-react'
    summary: >-
      Identifies an element (or elements) in order to define a visual,
      functional, or contextual parent/child relationship

      between DOM elements where the DOM hierarchy cannot be used to represent
      the relationship.


      See aria-controls.
    fullName: aria-owns
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-owns?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-owns'
  - name: aria-placeholder
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-placeholder'
    package: '@azure/communication-react'
    summary: >-
      Defines a short hint (a word or short phrase) intended to aid the user
      with data entry when the control has no value.

      A hint could be a sample value or a brief description of the expected
      format.
    fullName: aria-placeholder
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-placeholder?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-placeholder'
  - name: aria-posinset
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-posinset'
    package: '@azure/communication-react'
    summary: >-
      Defines an element's number or position in the current set of listitems or
      treeitems. Not required if all elements in the set are present in the DOM.


      See aria-setsize.
    fullName: aria-posinset
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-posinset?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-posinset'
  - name: aria-pressed
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-pressed'
    package: '@azure/communication-react'
    summary: |-
      Indicates the current "pressed" state of toggle buttons.

      See aria-checked @see aria-selected.
    fullName: aria-pressed
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-pressed?: boolean | "false" | "mixed" | "true" | undefined'
      return:
        description: ''
        type: boolean | "false" | "mixed" | "true" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-pressed'
  - name: aria-readonly
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-readonly'
    package: '@azure/communication-react'
    summary: |-
      Indicates that the element is not editable, but is otherwise operable.

      See aria-disabled.
    fullName: aria-readonly
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-readonly?: boolean | "false" | "true" | undefined'
      return:
        description: ''
        type: boolean | "false" | "true" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-readonly'
  - name: aria-relevant
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-relevant'
    package: '@azure/communication-react'
    summary: >-
      Indicates what notifications the user agent will trigger when the
      accessibility tree within a live region is modified.


      See aria-atomic.
    fullName: aria-relevant
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        aria-relevant?: "additions" | "additions removals" | "additions text" |
        "all" | "removals" | "removals additions" | "removals text" | "text" |
        "text additions" | "text removals" | undefined
      return:
        description: ''
        type: >-
          "additions" | "additions removals" | "additions text" | "all" |
          "removals" | "removals additions" | "removals text" | "text" | "text
          additions" | "text removals" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-relevant'
  - name: aria-required
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-required'
    package: '@azure/communication-react'
    summary: >-
      Indicates that user input is required on the element before a form may be
      submitted.
    fullName: aria-required
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-required?: boolean | "false" | "true" | undefined'
      return:
        description: ''
        type: boolean | "false" | "true" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-required'
  - name: aria-roledescription
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-roledescription'
    package: '@azure/communication-react'
    summary: >-
      Defines a human-readable, author-localized description for the role of an
      element.
    fullName: aria-roledescription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-roledescription?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-roledescription'
  - name: aria-rowcount
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-rowcount'
    package: '@azure/communication-react'
    summary: |-
      Defines the total number of rows in a table, grid, or treegrid.

      See aria-rowindex.
    fullName: aria-rowcount
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-rowcount?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-rowcount'
  - name: aria-rowindex
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-rowindex'
    package: '@azure/communication-react'
    summary: >-
      Defines an element's row index or position with respect to the total
      number of rows within a table, grid, or treegrid.


      See aria-rowcount @see aria-rowspan.
    fullName: aria-rowindex
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-rowindex?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-rowindex'
  - name: aria-rowspan
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-rowspan'
    package: '@azure/communication-react'
    summary: >-
      Defines the number of rows spanned by a cell or gridcell within a table,
      grid, or treegrid.


      See aria-rowindex @see aria-colspan.
    fullName: aria-rowspan
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-rowspan?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-rowspan'
  - name: aria-selected
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-selected'
    package: '@azure/communication-react'
    summary: |-
      Indicates the current "selected" state of various widgets.

      See aria-checked @see aria-pressed.
    fullName: aria-selected
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-selected?: boolean | "false" | "true" | undefined'
      return:
        description: ''
        type: boolean | "false" | "true" | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-selected'
  - name: aria-setsize
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-setsize'
    package: '@azure/communication-react'
    summary: >-
      Defines the number of items in the current set of listitems or treeitems.
      Not required if all elements in the set are present in the DOM.


      See aria-posinset.
    fullName: aria-setsize
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-setsize?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-setsize'
  - name: aria-sort
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-sort'
    package: '@azure/communication-react'
    summary: >-
      Indicates if items in a table or grid are sorted in ascending or
      descending order.
    fullName: aria-sort
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-sort?: "none" | "ascending" | "descending" | "other" | undefined'
      return:
        description: ''
        type: '"none" | "ascending" | "descending" | "other" | undefined'
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-sort'
  - name: aria-valuemax
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-valuemax'
    package: '@azure/communication-react'
    summary: Defines the maximum allowed value for a range widget.
    fullName: aria-valuemax
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-valuemax?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-valuemax'
  - name: aria-valuemin
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-valuemin'
    package: '@azure/communication-react'
    summary: Defines the minimum allowed value for a range widget.
    fullName: aria-valuemin
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-valuemin?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-valuemin'
  - name: aria-valuenow
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-valuenow'
    package: '@azure/communication-react'
    summary: |-
      Defines the current value for a range widget.

      See aria-valuetext.
    fullName: aria-valuenow
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-valuenow?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-valuenow'
  - name: aria-valuetext
    uid: '@azure/communication-react.MicrophoneButtonProps.aria-valuetext'
    package: '@azure/communication-react'
    summary: >-
      Defines the human readable text alternative of aria-valuenow for a range
      widget.
    fullName: aria-valuetext
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-valuetext?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AriaAttributes.'aria-valuetext'
  - name: ariaDescription
    uid: '@azure/communication-react.MicrophoneButtonProps.ariaDescription'
    package: '@azure/communication-react'
    summary: >
      Detailed description of the button for the benefit of screen readers.

      Besides the compound button, other button types will need more information
      provided to screen reader.
    fullName: ariaDescription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaDescription?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IButtonProps.ariaDescription
  - name: ariaHidden
    uid: '@azure/communication-react.MicrophoneButtonProps.ariaHidden'
    package: '@azure/communication-react'
    summary: >-
      If true, add an `aria-hidden` attribute instructing screen readers to
      ignore the element.
    fullName: ariaHidden
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaHidden?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IButtonProps.ariaHidden
  - name: ariaLabel
    uid: '@azure/communication-react.MicrophoneButtonProps.ariaLabel'
    package: '@azure/communication-react'
    summary: The aria label of the button for the benefit of screen readers.
    fullName: ariaLabel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaLabel?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IButtonProps.ariaLabel
  - name: as
    uid: '@azure/communication-react.MicrophoneButtonProps.as'
    package: '@azure/communication-react'
    summary: ''
    fullName: as
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'as?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.as
  - name: async
    uid: '@azure/communication-react.MicrophoneButtonProps.async'
    package: '@azure/communication-react'
    summary: ''
    fullName: async
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'async?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.async
  - name: autoCapitalize
    uid: '@azure/communication-react.MicrophoneButtonProps.autoCapitalize'
    package: '@azure/communication-react'
    summary: ''
    fullName: autoCapitalize
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoCapitalize?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.autoCapitalize
  - name: autoComplete
    uid: '@azure/communication-react.MicrophoneButtonProps.autoComplete'
    package: '@azure/communication-react'
    summary: ''
    fullName: autoComplete
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoComplete?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.autoComplete
  - name: autoCorrect
    uid: '@azure/communication-react.MicrophoneButtonProps.autoCorrect'
    package: '@azure/communication-react'
    summary: ''
    fullName: autoCorrect
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoCorrect?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.autoCorrect
  - name: autoFocus
    uid: '@azure/communication-react.MicrophoneButtonProps.autoFocus'
    package: '@azure/communication-react'
    summary: ''
    fullName: autoFocus
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoFocus?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.autoFocus
  - name: autoPlay
    uid: '@azure/communication-react.MicrophoneButtonProps.autoPlay'
    package: '@azure/communication-react'
    summary: ''
    fullName: autoPlay
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoPlay?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.autoPlay
  - name: autoSave
    uid: '@azure/communication-react.MicrophoneButtonProps.autoSave'
    package: '@azure/communication-react'
    summary: ''
    fullName: autoSave
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoSave?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.autoSave
  - name: buttonType
    uid: '@azure/communication-react.MicrophoneButtonProps.buttonType'
    package: '@azure/communication-react'
    summary: ''
    fullName: buttonType
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: |-
      Deprecated at v1.2.3, to be removed at \>= v2.0.0.
      Use specific button component instead.
    syntax:
      content: 'buttonType?: ButtonType'
      return:
        description: ''
        type: ButtonType
    inheritanceDescription: <b>Inherited From</b> IButtonProps.buttonType
  - name: capture
    uid: '@azure/communication-react.MicrophoneButtonProps.capture'
    package: '@azure/communication-react'
    summary: ''
    fullName: capture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'capture?: boolean | string | undefined'
      return:
        description: ''
        type: boolean | string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.capture
  - name: cellPadding
    uid: '@azure/communication-react.MicrophoneButtonProps.cellPadding'
    package: '@azure/communication-react'
    summary: ''
    fullName: cellPadding
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cellPadding?: number | string | undefined'
      return:
        description: ''
        type: number | string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.cellPadding
  - name: cellSpacing
    uid: '@azure/communication-react.MicrophoneButtonProps.cellSpacing'
    package: '@azure/communication-react'
    summary: ''
    fullName: cellSpacing
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cellSpacing?: number | string | undefined'
      return:
        description: ''
        type: number | string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.cellSpacing
  - name: challenge
    uid: '@azure/communication-react.MicrophoneButtonProps.challenge'
    package: '@azure/communication-react'
    summary: ''
    fullName: challenge
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'challenge?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.challenge
  - name: charSet
    uid: '@azure/communication-react.MicrophoneButtonProps.charSet'
    package: '@azure/communication-react'
    summary: ''
    fullName: charSet
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'charSet?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.charSet
  - name: checked
    uid: '@azure/communication-react.MicrophoneButtonProps.checked'
    package: '@azure/communication-react'
    summary: Whether the button is checked
    fullName: checked
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'checked?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IButtonProps.checked
  - name: children
    uid: '@azure/communication-react.MicrophoneButtonProps.children'
    package: '@azure/communication-react'
    summary: ''
    fullName: children
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'children?: ReactNode | undefined'
      return:
        description: ''
        type: ReactNode | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.children
  - name: cite
    uid: '@azure/communication-react.MicrophoneButtonProps.cite'
    package: '@azure/communication-react'
    summary: ''
    fullName: cite
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cite?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.cite
  - name: classID
    uid: '@azure/communication-react.MicrophoneButtonProps.classID'
    package: '@azure/communication-react'
    summary: ''
    fullName: classID
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'classID?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.classID
  - name: className
    uid: '@azure/communication-react.MicrophoneButtonProps.className'
    package: '@azure/communication-react'
    summary: 'If provided, additional class name to provide on the root element.'
    fullName: className
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IButtonProps.className
  - name: color
    uid: '@azure/communication-react.MicrophoneButtonProps.color'
    package: '@azure/communication-react'
    summary: ''
    fullName: color
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'color?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.color
  - name: cols
    uid: '@azure/communication-react.MicrophoneButtonProps.cols'
    package: '@azure/communication-react'
    summary: ''
    fullName: cols
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cols?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.cols
  - name: colSpan
    uid: '@azure/communication-react.MicrophoneButtonProps.colSpan'
    package: '@azure/communication-react'
    summary: ''
    fullName: colSpan
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'colSpan?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.colSpan
  - name: componentRef
    uid: '@azure/communication-react.MicrophoneButtonProps.componentRef'
    package: '@azure/communication-react'
    summary: >-
      Optional callback to access the `IButton` interface. Use this instead of
      `ref` for accessing

      the public methods and properties of the component.
    fullName: componentRef
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<IButton>'
      return:
        description: ''
        type: IRefObject&lt;IButton&gt;
    inheritanceDescription: <b>Inherited From</b> IButtonProps.componentRef
  - name: content
    uid: '@azure/communication-react.MicrophoneButtonProps.content'
    package: '@azure/communication-react'
    summary: ''
    fullName: content
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'content?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.content
  - name: contentEditable
    uid: '@azure/communication-react.MicrophoneButtonProps.contentEditable'
    package: '@azure/communication-react'
    summary: ''
    fullName: contentEditable
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'contentEditable?: Booleanish | "inherit" | undefined'
      return:
        description: ''
        type: Booleanish | "inherit" | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.contentEditable
  - name: contextMenu
    uid: '@azure/communication-react.MicrophoneButtonProps.contextMenu'
    package: '@azure/communication-react'
    summary: ''
    fullName: contextMenu
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'contextMenu?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.contextMenu
  - name: controls
    uid: '@azure/communication-react.MicrophoneButtonProps.controls'
    package: '@azure/communication-react'
    summary: ''
    fullName: controls
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'controls?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.controls
  - name: coords
    uid: '@azure/communication-react.MicrophoneButtonProps.coords'
    package: '@azure/communication-react'
    summary: ''
    fullName: coords
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'coords?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.coords
  - name: crossOrigin
    uid: '@azure/communication-react.MicrophoneButtonProps.crossOrigin'
    package: '@azure/communication-react'
    summary: ''
    fullName: crossOrigin
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'crossOrigin?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.crossOrigin
  - name: dangerouslySetInnerHTML
    uid: '@azure/communication-react.MicrophoneButtonProps.dangerouslySetInnerHTML'
    package: '@azure/communication-react'
    summary: ''
    fullName: dangerouslySetInnerHTML
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dangerouslySetInnerHTML?: { __html: string } | undefined'
      return:
        description: ''
        type: '{ __html: string } | undefined'
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.dangerouslySetInnerHTML
  - name: data
    uid: '@azure/communication-react.MicrophoneButtonProps.data'
    package: '@azure/communication-react'
    summary: Any custom data the developer wishes to associate with the button.
    fullName: data
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'data?: any'
      return:
        description: ''
        type: any
    inheritanceDescription: <b>Inherited From</b> IButtonProps.data
  - name: datatype
    uid: '@azure/communication-react.MicrophoneButtonProps.datatype'
    package: '@azure/communication-react'
    summary: ''
    fullName: datatype
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'datatype?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.datatype
  - name: dateTime
    uid: '@azure/communication-react.MicrophoneButtonProps.dateTime'
    package: '@azure/communication-react'
    summary: ''
    fullName: dateTime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dateTime?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.dateTime
  - name: default
    uid: '@azure/communication-react.MicrophoneButtonProps.default'
    package: '@azure/communication-react'
    summary: ''
    fullName: default
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'default?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.default
  - name: defaultChecked
    uid: '@azure/communication-react.MicrophoneButtonProps.defaultChecked'
    package: '@azure/communication-react'
    summary: ''
    fullName: defaultChecked
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultChecked?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.defaultChecked
  - name: defaultRender
    uid: '@azure/communication-react.MicrophoneButtonProps.defaultRender'
    package: '@azure/communication-react'
    summary: yet unknown docs
    fullName: defaultRender
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultRender?: any'
      return:
        description: ''
        type: any
    inheritanceDescription: <b>Inherited From</b> IButtonProps.defaultRender
  - name: defaultValue
    uid: '@azure/communication-react.MicrophoneButtonProps.defaultValue'
    package: '@azure/communication-react'
    summary: ''
    fullName: defaultValue
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultValue?: string | number | ReadonlyArray<string> | undefined'
      return:
        description: ''
        type: string | number | ReadonlyArray&lt;string&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.defaultValue
  - name: defer
    uid: '@azure/communication-react.MicrophoneButtonProps.defer'
    package: '@azure/communication-react'
    summary: ''
    fullName: defer
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defer?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.defer
  - name: description
    uid: '@azure/communication-react.MicrophoneButtonProps.description'
    package: '@azure/communication-react'
    summary: Style for the description text if applicable (for compound buttons).
    fullName: description
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `secondaryText` instead.
    syntax:
      content: 'description?: IStyle'
      return:
        description: ''
        type: IStyle
    inheritanceDescription: <b>Inherited From</b> IButtonProps.description
  - name: dir
    uid: '@azure/communication-react.MicrophoneButtonProps.dir'
    package: '@azure/communication-react'
    summary: ''
    fullName: dir
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dir?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.dir
  - name: disabled
    uid: '@azure/communication-react.MicrophoneButtonProps.disabled'
    package: '@azure/communication-react'
    summary: Whether the button is disabled
    fullName: disabled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disabled?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IButtonProps.disabled
  - name: download
    uid: '@azure/communication-react.MicrophoneButtonProps.download'
    package: '@azure/communication-react'
    summary: ''
    fullName: download
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'download?: any'
      return:
        description: ''
        type: any
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.download
  - name: draggable
    uid: '@azure/communication-react.MicrophoneButtonProps.draggable'
    package: '@azure/communication-react'
    summary: ''
    fullName: draggable
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'draggable?: Booleanish | undefined'
      return:
        description: ''
        type: Booleanish | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.draggable
  - name: elementRef
    uid: '@azure/communication-react.MicrophoneButtonProps.elementRef'
    package: '@azure/communication-react'
    summary: Optional callback to access the root DOM element.
    fullName: elementRef
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Temporary solution which will be replaced with ref in the V8 release.
    syntax:
      content: 'elementRef?: React.Ref<HTMLElement>'
      return:
        description: ''
        type: <xref uid="React.Ref" />&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IButtonProps.elementRef
  - name: encType
    uid: '@azure/communication-react.MicrophoneButtonProps.encType'
    package: '@azure/communication-react'
    summary: ''
    fullName: encType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'encType?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.encType
  - name: form
    uid: '@azure/communication-react.MicrophoneButtonProps.form'
    package: '@azure/communication-react'
    summary: ''
    fullName: form
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'form?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.form
  - name: formAction
    uid: '@azure/communication-react.MicrophoneButtonProps.formAction'
    package: '@azure/communication-react'
    summary: ''
    fullName: formAction
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'formAction?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.formAction
  - name: formEncType
    uid: '@azure/communication-react.MicrophoneButtonProps.formEncType'
    package: '@azure/communication-react'
    summary: ''
    fullName: formEncType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'formEncType?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.formEncType
  - name: formMethod
    uid: '@azure/communication-react.MicrophoneButtonProps.formMethod'
    package: '@azure/communication-react'
    summary: ''
    fullName: formMethod
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'formMethod?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.formMethod
  - name: formNoValidate
    uid: '@azure/communication-react.MicrophoneButtonProps.formNoValidate'
    package: '@azure/communication-react'
    summary: ''
    fullName: formNoValidate
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'formNoValidate?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.formNoValidate
  - name: formTarget
    uid: '@azure/communication-react.MicrophoneButtonProps.formTarget'
    package: '@azure/communication-react'
    summary: ''
    fullName: formTarget
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'formTarget?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.formTarget
  - name: frameBorder
    uid: '@azure/communication-react.MicrophoneButtonProps.frameBorder'
    package: '@azure/communication-react'
    summary: ''
    fullName: frameBorder
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'frameBorder?: number | string | undefined'
      return:
        description: ''
        type: number | string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.frameBorder
  - name: getClassNames
    uid: '@azure/communication-react.MicrophoneButtonProps.getClassNames'
    package: '@azure/communication-react'
    summary: >-
      Method to provide the classnames to style a button.

      The default value for this prop is the `getClassnames` func defined in
      `BaseButton.classnames.ts`.
    fullName: getClassNames
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        getClassNames?: (theme: ITheme, className: string, variantClassName:
        string, iconClassName: string | undefined, menuIconClassName: string |
        undefined, disabled: boolean, checked: boolean, expanded: boolean,
        hasMenu: boolean, isSplit: boolean | undefined, allowDisabledFocus:
        boolean) => IButtonClassNames
      return:
        description: ''
        type: >-
          (theme: ITheme, className: string, variantClassName: string,
          iconClassName: string | undefined, menuIconClassName: string |
          undefined, disabled: boolean, checked: boolean, expanded: boolean,
          hasMenu: boolean, isSplit: boolean | undefined, allowDisabledFocus:
          boolean) =&gt; IButtonClassNames
    inheritanceDescription: <b>Inherited From</b> IButtonProps.getClassNames
  - name: getSplitButtonClassNames
    uid: '@azure/communication-react.MicrophoneButtonProps.getSplitButtonClassNames'
    package: '@azure/communication-react'
    summary: >-
      Method to provide the classnames to style a button.

      The default value for this prop is the `getClassnames` func defined in
      `BaseButton.classnames.ts`.
    fullName: getSplitButtonClassNames
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        getSplitButtonClassNames?: (disabled: boolean, expanded: boolean,
        checked: boolean, allowDisabledFocus: boolean) => ISplitButtonClassNames
      return:
        description: ''
        type: >-
          (disabled: boolean, expanded: boolean, checked: boolean,
          allowDisabledFocus: boolean) =&gt; ISplitButtonClassNames
    inheritanceDescription: <b>Inherited From</b> IButtonProps.getSplitButtonClassNames
  - name: headers
    uid: '@azure/communication-react.MicrophoneButtonProps.headers'
    package: '@azure/communication-react'
    summary: ''
    fullName: headers
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'headers?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.headers
  - name: height
    uid: '@azure/communication-react.MicrophoneButtonProps.height'
    package: '@azure/communication-react'
    summary: ''
    fullName: height
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'height?: number | string | undefined'
      return:
        description: ''
        type: number | string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.height
  - name: hidden
    uid: '@azure/communication-react.MicrophoneButtonProps.hidden'
    package: '@azure/communication-react'
    summary: ''
    fullName: hidden
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hidden?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.hidden
  - name: high
    uid: '@azure/communication-react.MicrophoneButtonProps.high'
    package: '@azure/communication-react'
    summary: ''
    fullName: high
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'high?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.high
  - name: href
    uid: '@azure/communication-react.MicrophoneButtonProps.href'
    package: '@azure/communication-react'
    summary: 'If provided, this component will be rendered as an anchor.'
    fullName: href
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'href?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IButtonProps.href
  - name: hrefLang
    uid: '@azure/communication-react.MicrophoneButtonProps.hrefLang'
    package: '@azure/communication-react'
    summary: ''
    fullName: hrefLang
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hrefLang?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.hrefLang
  - name: htmlFor
    uid: '@azure/communication-react.MicrophoneButtonProps.htmlFor'
    package: '@azure/communication-react'
    summary: ''
    fullName: htmlFor
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'htmlFor?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.htmlFor
  - name: httpEquiv
    uid: '@azure/communication-react.MicrophoneButtonProps.httpEquiv'
    package: '@azure/communication-react'
    summary: ''
    fullName: httpEquiv
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'httpEquiv?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.httpEquiv
  - name: iconProps
    uid: '@azure/communication-react.MicrophoneButtonProps.iconProps'
    package: '@azure/communication-react'
    summary: The props for the icon shown in the button.
    fullName: iconProps
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'iconProps?: IIconProps'
      return:
        description: ''
        type: IIconProps
    inheritanceDescription: <b>Inherited From</b> IButtonProps.iconProps
  - name: id
    uid: '@azure/communication-react.MicrophoneButtonProps.id'
    package: '@azure/communication-react'
    summary: ''
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.id
  - name: inlist
    uid: '@azure/communication-react.MicrophoneButtonProps.inlist'
    package: '@azure/communication-react'
    summary: ''
    fullName: inlist
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'inlist?: any'
      return:
        description: ''
        type: any
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.inlist
  - name: inputMode
    uid: '@azure/communication-react.MicrophoneButtonProps.inputMode'
    package: '@azure/communication-react'
    summary: >-
      Hints at the type of data that might be entered by the user while editing
      the element or its contents


      See
      https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute
    fullName: inputMode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        inputMode?: "none" | "text" | "tel" | "url" | "email" | "numeric" |
        "decimal" | "search" | undefined
      return:
        description: ''
        type: >-
          "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" |
          "search" | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.inputMode
  - name: integrity
    uid: '@azure/communication-react.MicrophoneButtonProps.integrity'
    package: '@azure/communication-react'
    summary: ''
    fullName: integrity
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'integrity?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.integrity
  - name: is
    uid: '@azure/communication-react.MicrophoneButtonProps.is'
    package: '@azure/communication-react'
    summary: >-
      Specify that a standard HTML element should behave like a defined custom
      built-in element


      See https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is
    fullName: is
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'is?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.is
  - name: itemID
    uid: '@azure/communication-react.MicrophoneButtonProps.itemID'
    package: '@azure/communication-react'
    summary: ''
    fullName: itemID
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'itemID?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.itemID
  - name: itemProp
    uid: '@azure/communication-react.MicrophoneButtonProps.itemProp'
    package: '@azure/communication-react'
    summary: ''
    fullName: itemProp
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'itemProp?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.itemProp
  - name: itemRef
    uid: '@azure/communication-react.MicrophoneButtonProps.itemRef'
    package: '@azure/communication-react'
    summary: ''
    fullName: itemRef
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'itemRef?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.itemRef
  - name: itemScope
    uid: '@azure/communication-react.MicrophoneButtonProps.itemScope'
    package: '@azure/communication-react'
    summary: ''
    fullName: itemScope
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'itemScope?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.itemScope
  - name: itemType
    uid: '@azure/communication-react.MicrophoneButtonProps.itemType'
    package: '@azure/communication-react'
    summary: ''
    fullName: itemType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'itemType?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.itemType
  - name: keyParams
    uid: '@azure/communication-react.MicrophoneButtonProps.keyParams'
    package: '@azure/communication-react'
    summary: ''
    fullName: keyParams
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'keyParams?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.keyParams
  - name: keytipProps
    uid: '@azure/communication-react.MicrophoneButtonProps.keytipProps'
    package: '@azure/communication-react'
    summary: Optional keytip for this button
    fullName: keytipProps
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'keytipProps?: IKeytipProps'
      return:
        description: ''
        type: IKeytipProps
    inheritanceDescription: <b>Inherited From</b> IButtonProps.keytipProps
  - name: keyType
    uid: '@azure/communication-react.MicrophoneButtonProps.keyType'
    package: '@azure/communication-react'
    summary: ''
    fullName: keyType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'keyType?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.keyType
  - name: kind
    uid: '@azure/communication-react.MicrophoneButtonProps.kind'
    package: '@azure/communication-react'
    summary: ''
    fullName: kind
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'kind?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.kind
  - name: label
    uid: '@azure/communication-react.MicrophoneButtonProps.label'
    package: '@azure/communication-react'
    summary: ''
    fullName: label
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'label?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.label
  - name: labelKey
    uid: '@azure/communication-react.MicrophoneButtonProps.labelKey'
    package: '@azure/communication-react'
    summary: Key to use for the Label component
    fullName: labelKey
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'labelKey?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ControlBarButtonProps.labelKey](xref:@azure/communication-react.ControlBarButtonProps.labelKey)
  - name: lang
    uid: '@azure/communication-react.MicrophoneButtonProps.lang'
    package: '@azure/communication-react'
    summary: ''
    fullName: lang
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'lang?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.lang
  - name: list
    uid: '@azure/communication-react.MicrophoneButtonProps.list'
    package: '@azure/communication-react'
    summary: ''
    fullName: list
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'list?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.list
  - name: loop
    uid: '@azure/communication-react.MicrophoneButtonProps.loop'
    package: '@azure/communication-react'
    summary: ''
    fullName: loop
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'loop?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.loop
  - name: low
    uid: '@azure/communication-react.MicrophoneButtonProps.low'
    package: '@azure/communication-react'
    summary: ''
    fullName: low
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'low?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.low
  - name: manifest
    uid: '@azure/communication-react.MicrophoneButtonProps.manifest'
    package: '@azure/communication-react'
    summary: ''
    fullName: manifest
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'manifest?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.manifest
  - name: marginHeight
    uid: '@azure/communication-react.MicrophoneButtonProps.marginHeight'
    package: '@azure/communication-react'
    summary: ''
    fullName: marginHeight
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'marginHeight?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.marginHeight
  - name: marginWidth
    uid: '@azure/communication-react.MicrophoneButtonProps.marginWidth'
    package: '@azure/communication-react'
    summary: ''
    fullName: marginWidth
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'marginWidth?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.marginWidth
  - name: max
    uid: '@azure/communication-react.MicrophoneButtonProps.max'
    package: '@azure/communication-react'
    summary: ''
    fullName: max
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'max?: number | string | undefined'
      return:
        description: ''
        type: number | string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.max
  - name: maxLength
    uid: '@azure/communication-react.MicrophoneButtonProps.maxLength'
    package: '@azure/communication-react'
    summary: ''
    fullName: maxLength
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxLength?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.maxLength
  - name: media
    uid: '@azure/communication-react.MicrophoneButtonProps.media'
    package: '@azure/communication-react'
    summary: ''
    fullName: media
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'media?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.media
  - name: mediaGroup
    uid: '@azure/communication-react.MicrophoneButtonProps.mediaGroup'
    package: '@azure/communication-react'
    summary: ''
    fullName: mediaGroup
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'mediaGroup?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.mediaGroup
  - name: menuAs
    uid: '@azure/communication-react.MicrophoneButtonProps.menuAs'
    package: '@azure/communication-react'
    summary: Render a custom menu in place of the normal one.
    fullName: menuAs
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'menuAs?: IComponentAs<IContextualMenuProps>'
      return:
        description: ''
        type: IComponentAs&lt;IContextualMenuProps&gt;
    inheritanceDescription: <b>Inherited From</b> IButtonProps.menuAs
  - name: menuIconProps
    uid: '@azure/communication-react.MicrophoneButtonProps.menuIconProps'
    package: '@azure/communication-react'
    summary: The props for the icon shown when providing a menu dropdown.
    fullName: menuIconProps
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'menuIconProps?: IIconProps'
      return:
        description: ''
        type: IIconProps
    inheritanceDescription: <b>Inherited From</b> IButtonProps.menuIconProps
  - name: menuProps
    uid: '@azure/communication-react.MicrophoneButtonProps.menuProps'
    package: '@azure/communication-react'
    summary: >-
      Props for button menu. Providing this will default to showing the menu
      icon. See `menuIconProps` for overriding

      how the default icon looks. Providing this in addition to `onClick` and
      setting the `split` property to `true`

      will render a SplitButton.
    fullName: menuProps
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'menuProps?: IContextualMenuProps'
      return:
        description: ''
        type: IContextualMenuProps
    inheritanceDescription: <b>Inherited From</b> IButtonProps.menuProps
  - name: menuTriggerKeyCode
    uid: '@azure/communication-react.MicrophoneButtonProps.menuTriggerKeyCode'
    package: '@azure/communication-react'
    summary: >-
      Provides a custom KeyCode that can be used to open the button menu.

      A value of `null` can be provided to disable opening the button menu with
      a key press.
    fullName: menuTriggerKeyCode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'menuTriggerKeyCode?: KeyCodes | null'
      return:
        description: ''
        type: KeyCodes | null
    inheritanceDescription: <b>Inherited From</b> IButtonProps.menuTriggerKeyCode
  - name: method
    uid: '@azure/communication-react.MicrophoneButtonProps.method'
    package: '@azure/communication-react'
    summary: ''
    fullName: method
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'method?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.method
  - name: min
    uid: '@azure/communication-react.MicrophoneButtonProps.min'
    package: '@azure/communication-react'
    summary: ''
    fullName: min
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'min?: number | string | undefined'
      return:
        description: ''
        type: number | string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.min
  - name: minLength
    uid: '@azure/communication-react.MicrophoneButtonProps.minLength'
    package: '@azure/communication-react'
    summary: ''
    fullName: minLength
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'minLength?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.minLength
  - name: multiple
    uid: '@azure/communication-react.MicrophoneButtonProps.multiple'
    package: '@azure/communication-react'
    summary: ''
    fullName: multiple
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'multiple?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.multiple
  - name: muted
    uid: '@azure/communication-react.MicrophoneButtonProps.muted'
    package: '@azure/communication-react'
    summary: ''
    fullName: muted
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'muted?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.muted
  - name: name
    uid: '@azure/communication-react.MicrophoneButtonProps.name'
    package: '@azure/communication-react'
    summary: ''
    fullName: name
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.name
  - name: nonce
    uid: '@azure/communication-react.MicrophoneButtonProps.nonce'
    package: '@azure/communication-react'
    summary: ''
    fullName: nonce
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'nonce?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.nonce
  - name: noValidate
    uid: '@azure/communication-react.MicrophoneButtonProps.noValidate'
    package: '@azure/communication-react'
    summary: ''
    fullName: noValidate
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'noValidate?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.noValidate
  - name: onAbort
    uid: '@azure/communication-react.MicrophoneButtonProps.onAbort'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAbort
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onAbort?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onAbort
  - name: onAbortCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onAbortCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAbortCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onAbortCapture?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onAbortCapture
  - name: onAfterMenuDismiss
    uid: '@azure/communication-react.MicrophoneButtonProps.onAfterMenuDismiss'
    package: '@azure/communication-react'
    summary: >-
      Callback that runs after Button's contextual menu was closed (removed from
      the DOM)
    fullName: onAfterMenuDismiss
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onAfterMenuDismiss?: () => void'
      return:
        description: ''
        type: () =&gt; void
    inheritanceDescription: <b>Inherited From</b> IButtonProps.onAfterMenuDismiss
  - name: onAnimationEnd
    uid: '@azure/communication-react.MicrophoneButtonProps.onAnimationEnd'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationEnd
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onAnimationEnd?: AnimationEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          AnimationEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onAnimationEnd
  - name: onAnimationEndCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onAnimationEndCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationEndCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onAnimationEndCapture?: AnimationEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          AnimationEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onAnimationEndCapture
  - name: onAnimationIteration
    uid: '@azure/communication-react.MicrophoneButtonProps.onAnimationIteration'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationIteration
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onAnimationIteration?: AnimationEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          AnimationEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onAnimationIteration
  - name: onAnimationIterationCapture
    uid: >-
      @azure/communication-react.MicrophoneButtonProps.onAnimationIterationCapture
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationIterationCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onAnimationIterationCapture?: AnimationEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          AnimationEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onAnimationIterationCapture
  - name: onAnimationStart
    uid: '@azure/communication-react.MicrophoneButtonProps.onAnimationStart'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationStart
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onAnimationStart?: AnimationEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          AnimationEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onAnimationStart
  - name: onAnimationStartCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onAnimationStartCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationStartCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onAnimationStartCapture?: AnimationEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          AnimationEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onAnimationStartCapture
  - name: onAuxClick
    uid: '@azure/communication-react.MicrophoneButtonProps.onAuxClick'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAuxClick
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onAuxClick?: MouseEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onAuxClick
  - name: onAuxClickCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onAuxClickCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAuxClickCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onAuxClickCapture?: MouseEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onAuxClickCapture
  - name: onBeforeInput
    uid: '@azure/communication-react.MicrophoneButtonProps.onBeforeInput'
    package: '@azure/communication-react'
    summary: ''
    fullName: onBeforeInput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onBeforeInput?: FormEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          FormEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onBeforeInput
  - name: onBeforeInputCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onBeforeInputCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onBeforeInputCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onBeforeInputCapture?: FormEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          FormEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onBeforeInputCapture
  - name: onBlur
    uid: '@azure/communication-react.MicrophoneButtonProps.onBlur'
    package: '@azure/communication-react'
    summary: ''
    fullName: onBlur
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onBlur?: FocusEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          FocusEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onBlur
  - name: onBlurCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onBlurCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onBlurCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onBlurCapture?: FocusEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          FocusEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onBlurCapture
  - name: onCanPlay
    uid: '@azure/communication-react.MicrophoneButtonProps.onCanPlay'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCanPlay
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCanPlay?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onCanPlay
  - name: onCanPlayCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onCanPlayCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCanPlayCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCanPlayCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onCanPlayCapture
  - name: onCanPlayThrough
    uid: '@azure/communication-react.MicrophoneButtonProps.onCanPlayThrough'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCanPlayThrough
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCanPlayThrough?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onCanPlayThrough
  - name: onCanPlayThroughCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onCanPlayThroughCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCanPlayThroughCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCanPlayThroughCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onCanPlayThroughCapture
  - name: onChange
    uid: '@azure/communication-react.MicrophoneButtonProps.onChange'
    package: '@azure/communication-react'
    summary: ''
    fullName: onChange
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onChange?: FormEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          FormEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onChange
  - name: onChangeCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onChangeCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onChangeCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onChangeCapture?: FormEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          FormEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onChangeCapture
  - name: onClick
    uid: '@azure/communication-react.MicrophoneButtonProps.onClick'
    package: '@azure/communication-react'
    summary: ''
    fullName: onClick
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onClick?: MouseEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onClick
  - name: onClickCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onClickCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onClickCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onClickCapture?: MouseEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onClickCapture
  - name: onCompositionEnd
    uid: '@azure/communication-react.MicrophoneButtonProps.onCompositionEnd'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionEnd
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCompositionEnd?: CompositionEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          CompositionEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onCompositionEnd
  - name: onCompositionEndCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onCompositionEndCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionEndCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCompositionEndCapture?: CompositionEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          CompositionEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onCompositionEndCapture
  - name: onCompositionStart
    uid: '@azure/communication-react.MicrophoneButtonProps.onCompositionStart'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionStart
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCompositionStart?: CompositionEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          CompositionEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onCompositionStart
  - name: onCompositionStartCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onCompositionStartCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionStartCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCompositionStartCapture?: CompositionEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          CompositionEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onCompositionStartCapture
  - name: onCompositionUpdate
    uid: '@azure/communication-react.MicrophoneButtonProps.onCompositionUpdate'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionUpdate
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCompositionUpdate?: CompositionEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          CompositionEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onCompositionUpdate
  - name: onCompositionUpdateCapture
    uid: >-
      @azure/communication-react.MicrophoneButtonProps.onCompositionUpdateCapture
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionUpdateCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCompositionUpdateCapture?: CompositionEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          CompositionEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onCompositionUpdateCapture
  - name: onContextMenu
    uid: '@azure/communication-react.MicrophoneButtonProps.onContextMenu'
    package: '@azure/communication-react'
    summary: ''
    fullName: onContextMenu
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onContextMenu?: MouseEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onContextMenu
  - name: onContextMenuCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onContextMenuCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onContextMenuCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onContextMenuCapture?: MouseEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onContextMenuCapture
  - name: onCopy
    uid: '@azure/communication-react.MicrophoneButtonProps.onCopy'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCopy
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCopy?: ClipboardEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ClipboardEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onCopy
  - name: onCopyCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onCopyCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCopyCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCopyCapture?: ClipboardEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ClipboardEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onCopyCapture
  - name: onCut
    uid: '@azure/communication-react.MicrophoneButtonProps.onCut'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCut
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCut?: ClipboardEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ClipboardEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onCut
  - name: onCutCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onCutCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCutCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCutCapture?: ClipboardEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ClipboardEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onCutCapture
  - name: onDoubleClick
    uid: '@azure/communication-react.MicrophoneButtonProps.onDoubleClick'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDoubleClick
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDoubleClick?: MouseEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDoubleClick
  - name: onDoubleClickCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onDoubleClickCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDoubleClickCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDoubleClickCapture?: MouseEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDoubleClickCapture
  - name: onDrag
    uid: '@azure/communication-react.MicrophoneButtonProps.onDrag'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDrag
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDrag?: DragEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          DragEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDrag
  - name: onDragCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onDragCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDragCapture?: DragEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          DragEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDragCapture
  - name: onDragEnd
    uid: '@azure/communication-react.MicrophoneButtonProps.onDragEnd'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragEnd
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDragEnd?: DragEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          DragEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDragEnd
  - name: onDragEndCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onDragEndCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragEndCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDragEndCapture?: DragEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          DragEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDragEndCapture
  - name: onDragEnter
    uid: '@azure/communication-react.MicrophoneButtonProps.onDragEnter'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragEnter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDragEnter?: DragEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          DragEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDragEnter
  - name: onDragEnterCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onDragEnterCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragEnterCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDragEnterCapture?: DragEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          DragEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDragEnterCapture
  - name: onDragExit
    uid: '@azure/communication-react.MicrophoneButtonProps.onDragExit'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragExit
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDragExit?: DragEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          DragEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDragExit
  - name: onDragExitCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onDragExitCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragExitCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDragExitCapture?: DragEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          DragEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDragExitCapture
  - name: onDragLeave
    uid: '@azure/communication-react.MicrophoneButtonProps.onDragLeave'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragLeave
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDragLeave?: DragEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          DragEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDragLeave
  - name: onDragLeaveCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onDragLeaveCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragLeaveCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDragLeaveCapture?: DragEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          DragEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDragLeaveCapture
  - name: onDragOver
    uid: '@azure/communication-react.MicrophoneButtonProps.onDragOver'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragOver
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDragOver?: DragEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          DragEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDragOver
  - name: onDragOverCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onDragOverCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragOverCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDragOverCapture?: DragEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          DragEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDragOverCapture
  - name: onDragStart
    uid: '@azure/communication-react.MicrophoneButtonProps.onDragStart'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragStart
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDragStart?: DragEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          DragEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDragStart
  - name: onDragStartCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onDragStartCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragStartCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDragStartCapture?: DragEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          DragEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDragStartCapture
  - name: onDrop
    uid: '@azure/communication-react.MicrophoneButtonProps.onDrop'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDrop
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDrop?: DragEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          DragEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDrop
  - name: onDropCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onDropCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDropCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDropCapture?: DragEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          DragEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDropCapture
  - name: onDurationChange
    uid: '@azure/communication-react.MicrophoneButtonProps.onDurationChange'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDurationChange
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDurationChange?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDurationChange
  - name: onDurationChangeCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onDurationChangeCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDurationChangeCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDurationChangeCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onDurationChangeCapture
  - name: onEmptied
    uid: '@azure/communication-react.MicrophoneButtonProps.onEmptied'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEmptied
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onEmptied?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onEmptied
  - name: onEmptiedCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onEmptiedCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEmptiedCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onEmptiedCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onEmptiedCapture
  - name: onEncrypted
    uid: '@azure/communication-react.MicrophoneButtonProps.onEncrypted'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEncrypted
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onEncrypted?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onEncrypted
  - name: onEncryptedCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onEncryptedCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEncryptedCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onEncryptedCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onEncryptedCapture
  - name: onEnded
    uid: '@azure/communication-react.MicrophoneButtonProps.onEnded'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEnded
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onEnded?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onEnded
  - name: onEndedCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onEndedCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEndedCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onEndedCapture?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onEndedCapture
  - name: onError
    uid: '@azure/communication-react.MicrophoneButtonProps.onError'
    package: '@azure/communication-react'
    summary: ''
    fullName: onError
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onError?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onError
  - name: onErrorCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onErrorCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onErrorCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onErrorCapture?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onErrorCapture
  - name: onFocus
    uid: '@azure/communication-react.MicrophoneButtonProps.onFocus'
    package: '@azure/communication-react'
    summary: ''
    fullName: onFocus
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onFocus?: FocusEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          FocusEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onFocus
  - name: onFocusCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onFocusCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onFocusCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onFocusCapture?: FocusEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          FocusEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onFocusCapture
  - name: onGotPointerCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onGotPointerCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onGotPointerCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onGotPointerCapture?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onGotPointerCapture
  - name: onGotPointerCaptureCapture
    uid: >-
      @azure/communication-react.MicrophoneButtonProps.onGotPointerCaptureCapture
    package: '@azure/communication-react'
    summary: ''
    fullName: onGotPointerCaptureCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onGotPointerCaptureCapture?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onGotPointerCaptureCapture
  - name: onInput
    uid: '@azure/communication-react.MicrophoneButtonProps.onInput'
    package: '@azure/communication-react'
    summary: ''
    fullName: onInput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onInput?: FormEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          FormEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onInput
  - name: onInputCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onInputCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onInputCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onInputCapture?: FormEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          FormEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onInputCapture
  - name: onInvalid
    uid: '@azure/communication-react.MicrophoneButtonProps.onInvalid'
    package: '@azure/communication-react'
    summary: ''
    fullName: onInvalid
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onInvalid?: FormEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          FormEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onInvalid
  - name: onInvalidCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onInvalidCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onInvalidCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onInvalidCapture?: FormEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          FormEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onInvalidCapture
  - name: onKeyDown
    uid: '@azure/communication-react.MicrophoneButtonProps.onKeyDown'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyDown
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onKeyDown?: KeyboardEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          KeyboardEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onKeyDown
  - name: onKeyDownCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onKeyDownCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyDownCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onKeyDownCapture?: KeyboardEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          KeyboardEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onKeyDownCapture
  - name: onKeyPress
    uid: '@azure/communication-react.MicrophoneButtonProps.onKeyPress'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyPress
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: ''
    syntax:
      content: >-
        onKeyPress?: KeyboardEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          KeyboardEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onKeyPress
  - name: onKeyPressCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onKeyPressCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyPressCapture
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: ''
    syntax:
      content: >-
        onKeyPressCapture?: KeyboardEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          KeyboardEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onKeyPressCapture
  - name: onKeyUp
    uid: '@azure/communication-react.MicrophoneButtonProps.onKeyUp'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyUp
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onKeyUp?: KeyboardEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          KeyboardEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onKeyUp
  - name: onKeyUpCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onKeyUpCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyUpCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onKeyUpCapture?: KeyboardEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          KeyboardEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onKeyUpCapture
  - name: onLoad
    uid: '@azure/communication-react.MicrophoneButtonProps.onLoad'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoad
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onLoad?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onLoad
  - name: onLoadCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onLoadCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onLoadCapture?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onLoadCapture
  - name: onLoadedData
    uid: '@azure/communication-react.MicrophoneButtonProps.onLoadedData'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadedData
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onLoadedData?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onLoadedData
  - name: onLoadedDataCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onLoadedDataCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadedDataCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onLoadedDataCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onLoadedDataCapture
  - name: onLoadedMetadata
    uid: '@azure/communication-react.MicrophoneButtonProps.onLoadedMetadata'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadedMetadata
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onLoadedMetadata?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onLoadedMetadata
  - name: onLoadedMetadataCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onLoadedMetadataCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadedMetadataCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onLoadedMetadataCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onLoadedMetadataCapture
  - name: onLoadStart
    uid: '@azure/communication-react.MicrophoneButtonProps.onLoadStart'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadStart
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onLoadStart?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onLoadStart
  - name: onLoadStartCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onLoadStartCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadStartCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onLoadStartCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onLoadStartCapture
  - name: onLostPointerCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onLostPointerCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLostPointerCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onLostPointerCapture?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onLostPointerCapture
  - name: onLostPointerCaptureCapture
    uid: >-
      @azure/communication-react.MicrophoneButtonProps.onLostPointerCaptureCapture
    package: '@azure/communication-react'
    summary: ''
    fullName: onLostPointerCaptureCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onLostPointerCaptureCapture?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onLostPointerCaptureCapture
  - name: onMenuClick
    uid: '@azure/communication-react.MicrophoneButtonProps.onMenuClick'
    package: '@azure/communication-react'
    summary: Optional callback when menu is clicked.
    fullName: onMenuClick
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onMenuClick?: (ev?: MouseEvent<HTMLElement> |
        KeyboardEvent<HTMLElement>, button?: IButtonProps) => void
      return:
        description: ''
        type: >-
          (ev?: MouseEvent&lt;HTMLElement&gt; |
          KeyboardEvent&lt;HTMLElement&gt;, button?: IButtonProps) =&gt; void
    inheritanceDescription: <b>Inherited From</b> IButtonProps.onMenuClick
  - name: onMouseDown
    uid: '@azure/communication-react.MicrophoneButtonProps.onMouseDown'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseDown
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onMouseDown?: MouseEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onMouseDown
  - name: onMouseDownCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onMouseDownCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseDownCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onMouseDownCapture?: MouseEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onMouseDownCapture
  - name: onMouseEnter
    uid: '@azure/communication-react.MicrophoneButtonProps.onMouseEnter'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseEnter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onMouseEnter?: MouseEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onMouseEnter
  - name: onMouseLeave
    uid: '@azure/communication-react.MicrophoneButtonProps.onMouseLeave'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseLeave
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onMouseLeave?: MouseEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onMouseLeave
  - name: onMouseMove
    uid: '@azure/communication-react.MicrophoneButtonProps.onMouseMove'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseMove
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onMouseMove?: MouseEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onMouseMove
  - name: onMouseMoveCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onMouseMoveCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseMoveCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onMouseMoveCapture?: MouseEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onMouseMoveCapture
  - name: onMouseOut
    uid: '@azure/communication-react.MicrophoneButtonProps.onMouseOut'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseOut
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onMouseOut?: MouseEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onMouseOut
  - name: onMouseOutCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onMouseOutCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseOutCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onMouseOutCapture?: MouseEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onMouseOutCapture
  - name: onMouseOver
    uid: '@azure/communication-react.MicrophoneButtonProps.onMouseOver'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseOver
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onMouseOver?: MouseEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onMouseOver
  - name: onMouseOverCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onMouseOverCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseOverCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onMouseOverCapture?: MouseEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onMouseOverCapture
  - name: onMouseUp
    uid: '@azure/communication-react.MicrophoneButtonProps.onMouseUp'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseUp
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onMouseUp?: MouseEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onMouseUp
  - name: onMouseUpCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onMouseUpCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseUpCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onMouseUpCapture?: MouseEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          MouseEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onMouseUpCapture
  - name: onPaste
    uid: '@azure/communication-react.MicrophoneButtonProps.onPaste'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPaste
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPaste?: ClipboardEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ClipboardEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPaste
  - name: onPasteCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onPasteCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPasteCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPasteCapture?: ClipboardEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ClipboardEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPasteCapture
  - name: onPause
    uid: '@azure/communication-react.MicrophoneButtonProps.onPause'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPause
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPause?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPause
  - name: onPauseCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onPauseCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPauseCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPauseCapture?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPauseCapture
  - name: onPlay
    uid: '@azure/communication-react.MicrophoneButtonProps.onPlay'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPlay
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPlay?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPlay
  - name: onPlayCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onPlayCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPlayCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPlayCapture?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPlayCapture
  - name: onPlaying
    uid: '@azure/communication-react.MicrophoneButtonProps.onPlaying'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPlaying
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPlaying?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPlaying
  - name: onPlayingCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onPlayingCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPlayingCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPlayingCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPlayingCapture
  - name: onPointerCancel
    uid: '@azure/communication-react.MicrophoneButtonProps.onPointerCancel'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerCancel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPointerCancel?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPointerCancel
  - name: onPointerCancelCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onPointerCancelCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerCancelCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPointerCancelCapture?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPointerCancelCapture
  - name: onPointerDown
    uid: '@azure/communication-react.MicrophoneButtonProps.onPointerDown'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerDown
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPointerDown?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPointerDown
  - name: onPointerDownCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onPointerDownCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerDownCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPointerDownCapture?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPointerDownCapture
  - name: onPointerEnter
    uid: '@azure/communication-react.MicrophoneButtonProps.onPointerEnter'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerEnter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPointerEnter?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPointerEnter
  - name: onPointerEnterCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onPointerEnterCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerEnterCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPointerEnterCapture?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPointerEnterCapture
  - name: onPointerLeave
    uid: '@azure/communication-react.MicrophoneButtonProps.onPointerLeave'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerLeave
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPointerLeave?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPointerLeave
  - name: onPointerLeaveCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onPointerLeaveCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerLeaveCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPointerLeaveCapture?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPointerLeaveCapture
  - name: onPointerMove
    uid: '@azure/communication-react.MicrophoneButtonProps.onPointerMove'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerMove
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPointerMove?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPointerMove
  - name: onPointerMoveCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onPointerMoveCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerMoveCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPointerMoveCapture?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPointerMoveCapture
  - name: onPointerOut
    uid: '@azure/communication-react.MicrophoneButtonProps.onPointerOut'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerOut
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPointerOut?: PointerEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPointerOut
  - name: onPointerOutCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onPointerOutCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerOutCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPointerOutCapture?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPointerOutCapture
  - name: onPointerOver
    uid: '@azure/communication-react.MicrophoneButtonProps.onPointerOver'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerOver
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPointerOver?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPointerOver
  - name: onPointerOverCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onPointerOverCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerOverCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPointerOverCapture?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPointerOverCapture
  - name: onPointerUp
    uid: '@azure/communication-react.MicrophoneButtonProps.onPointerUp'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerUp
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPointerUp?: PointerEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPointerUp
  - name: onPointerUpCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onPointerUpCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerUpCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPointerUpCapture?: PointerEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          PointerEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onPointerUpCapture
  - name: onProgress
    uid: '@azure/communication-react.MicrophoneButtonProps.onProgress'
    package: '@azure/communication-react'
    summary: ''
    fullName: onProgress
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onProgress?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onProgress
  - name: onProgressCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onProgressCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onProgressCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onProgressCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onProgressCapture
  - name: onRateChange
    uid: '@azure/communication-react.MicrophoneButtonProps.onRateChange'
    package: '@azure/communication-react'
    summary: ''
    fullName: onRateChange
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onRateChange?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onRateChange
  - name: onRateChangeCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onRateChangeCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onRateChangeCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onRateChangeCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onRateChangeCapture
  - name: onRenderAriaDescription
    uid: '@azure/communication-react.MicrophoneButtonProps.onRenderAriaDescription'
    package: '@azure/communication-react'
    summary: Custom render function for the aria description element.
    fullName: onRenderAriaDescription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderAriaDescription?: IRenderFunction<IButtonProps>'
      return:
        description: ''
        type: IRenderFunction&lt;IButtonProps&gt;
    inheritanceDescription: <b>Inherited From</b> IButtonProps.onRenderAriaDescription
  - name: onRenderChildren
    uid: '@azure/communication-react.MicrophoneButtonProps.onRenderChildren'
    package: '@azure/communication-react'
    summary: Custom render function for rendering the button children.
    fullName: onRenderChildren
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderChildren?: IRenderFunction<IButtonProps>'
      return:
        description: ''
        type: IRenderFunction&lt;IButtonProps&gt;
    inheritanceDescription: <b>Inherited From</b> IButtonProps.onRenderChildren
  - name: onRenderDescription
    uid: '@azure/communication-react.MicrophoneButtonProps.onRenderDescription'
    package: '@azure/communication-react'
    summary: Custom render function for the desciption text.
    fullName: onRenderDescription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderDescription?: IRenderFunction<IButtonProps>'
      return:
        description: ''
        type: IRenderFunction&lt;IButtonProps&gt;
    inheritanceDescription: <b>Inherited From</b> IButtonProps.onRenderDescription
  - name: onRenderIcon
    uid: '@azure/communication-react.MicrophoneButtonProps.onRenderIcon'
    package: '@azure/communication-react'
    summary: Custom render function for the icon
    fullName: onRenderIcon
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderIcon?: IRenderFunction<IButtonProps>'
      return:
        description: ''
        type: IRenderFunction&lt;IButtonProps&gt;
    inheritanceDescription: <b>Inherited From</b> IButtonProps.onRenderIcon
  - name: onRenderMenu
    uid: '@azure/communication-react.MicrophoneButtonProps.onRenderMenu'
    package: '@azure/communication-react'
    summary: ''
    fullName: onRenderMenu
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: |-
      Deprecated at v6.3.2, to be removed at \>= v7.0.0.
      Use `menuAs` instead.
    syntax:
      content: 'onRenderMenu?: IRenderFunction<IContextualMenuProps>'
      return:
        description: ''
        type: IRenderFunction&lt;IContextualMenuProps&gt;
    inheritanceDescription: <b>Inherited From</b> IButtonProps.onRenderMenu
  - name: onRenderMenuIcon
    uid: '@azure/communication-react.MicrophoneButtonProps.onRenderMenuIcon'
    package: '@azure/communication-react'
    summary: Custom render function for button menu icon
    fullName: onRenderMenuIcon
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderMenuIcon?: IRenderFunction<IButtonProps>'
      return:
        description: ''
        type: IRenderFunction&lt;IButtonProps&gt;
    inheritanceDescription: <b>Inherited From</b> IButtonProps.onRenderMenuIcon
  - name: onRenderOffIcon
    uid: '@azure/communication-react.MicrophoneButtonProps.onRenderOffIcon'
    package: '@azure/communication-react'
    summary: Icon to render when the button is not checked.
    fullName: onRenderOffIcon
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderOffIcon?: IRenderFunction<IButtonProps>'
      return:
        description: ''
        type: IRenderFunction&lt;IButtonProps&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ControlBarButtonProps.onRenderOffIcon](xref:@azure/communication-react.ControlBarButtonProps.onRenderOffIcon)
  - name: onRenderOnIcon
    uid: '@azure/communication-react.MicrophoneButtonProps.onRenderOnIcon'
    package: '@azure/communication-react'
    summary: Icon to render when the button is checked.
    fullName: onRenderOnIcon
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderOnIcon?: IRenderFunction<IButtonProps>'
      return:
        description: ''
        type: IRenderFunction&lt;IButtonProps&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ControlBarButtonProps.onRenderOnIcon](xref:@azure/communication-react.ControlBarButtonProps.onRenderOnIcon)
  - name: onRenderText
    uid: '@azure/communication-react.MicrophoneButtonProps.onRenderText'
    package: '@azure/communication-react'
    summary: Custom render function for the label text.
    fullName: onRenderText
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderText?: IRenderFunction<IButtonProps>'
      return:
        description: ''
        type: IRenderFunction&lt;IButtonProps&gt;
    inheritanceDescription: <b>Inherited From</b> IButtonProps.onRenderText
  - name: onReset
    uid: '@azure/communication-react.MicrophoneButtonProps.onReset'
    package: '@azure/communication-react'
    summary: ''
    fullName: onReset
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onReset?: FormEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          FormEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onReset
  - name: onResetCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onResetCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onResetCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onResetCapture?: FormEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          FormEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onResetCapture
  - name: onScroll
    uid: '@azure/communication-react.MicrophoneButtonProps.onScroll'
    package: '@azure/communication-react'
    summary: ''
    fullName: onScroll
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onScroll?: UIEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          UIEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onScroll
  - name: onScrollCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onScrollCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onScrollCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onScrollCapture?: UIEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          UIEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onScrollCapture
  - name: onSeeked
    uid: '@azure/communication-react.MicrophoneButtonProps.onSeeked'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSeeked
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onSeeked?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onSeeked
  - name: onSeekedCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onSeekedCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSeekedCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onSeekedCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onSeekedCapture
  - name: onSeeking
    uid: '@azure/communication-react.MicrophoneButtonProps.onSeeking'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSeeking
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onSeeking?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onSeeking
  - name: onSeekingCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onSeekingCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSeekingCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onSeekingCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onSeekingCapture
  - name: onSelect
    uid: '@azure/communication-react.MicrophoneButtonProps.onSelect'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSelect
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onSelect?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onSelect
  - name: onSelectCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onSelectCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSelectCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onSelectCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onSelectCapture
  - name: onStalled
    uid: '@azure/communication-react.MicrophoneButtonProps.onStalled'
    package: '@azure/communication-react'
    summary: ''
    fullName: onStalled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onStalled?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onStalled
  - name: onStalledCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onStalledCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onStalledCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onStalledCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onStalledCapture
  - name: onSubmit
    uid: '@azure/communication-react.MicrophoneButtonProps.onSubmit'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSubmit
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onSubmit?: FormEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          FormEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onSubmit
  - name: onSubmitCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onSubmitCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSubmitCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onSubmitCapture?: FormEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          FormEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onSubmitCapture
  - name: onSuspend
    uid: '@azure/communication-react.MicrophoneButtonProps.onSuspend'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSuspend
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onSuspend?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onSuspend
  - name: onSuspendCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onSuspendCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSuspendCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onSuspendCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onSuspendCapture
  - name: onTimeUpdate
    uid: '@azure/communication-react.MicrophoneButtonProps.onTimeUpdate'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTimeUpdate
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onTimeUpdate?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onTimeUpdate
  - name: onTimeUpdateCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onTimeUpdateCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTimeUpdateCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onTimeUpdateCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onTimeUpdateCapture
  - name: onTouchCancel
    uid: '@azure/communication-react.MicrophoneButtonProps.onTouchCancel'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchCancel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onTouchCancel?: TouchEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          TouchEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onTouchCancel
  - name: onTouchCancelCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onTouchCancelCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchCancelCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onTouchCancelCapture?: TouchEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          TouchEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onTouchCancelCapture
  - name: onTouchEnd
    uid: '@azure/communication-react.MicrophoneButtonProps.onTouchEnd'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchEnd
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onTouchEnd?: TouchEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          TouchEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onTouchEnd
  - name: onTouchEndCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onTouchEndCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchEndCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onTouchEndCapture?: TouchEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          TouchEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onTouchEndCapture
  - name: onTouchMove
    uid: '@azure/communication-react.MicrophoneButtonProps.onTouchMove'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchMove
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onTouchMove?: TouchEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          TouchEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onTouchMove
  - name: onTouchMoveCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onTouchMoveCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchMoveCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onTouchMoveCapture?: TouchEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          TouchEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onTouchMoveCapture
  - name: onTouchStart
    uid: '@azure/communication-react.MicrophoneButtonProps.onTouchStart'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchStart
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onTouchStart?: TouchEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          TouchEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onTouchStart
  - name: onTouchStartCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onTouchStartCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchStartCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onTouchStartCapture?: TouchEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          TouchEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onTouchStartCapture
  - name: onTransitionEnd
    uid: '@azure/communication-react.MicrophoneButtonProps.onTransitionEnd'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTransitionEnd
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onTransitionEnd?: TransitionEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          TransitionEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onTransitionEnd
  - name: onTransitionEndCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onTransitionEndCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTransitionEndCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onTransitionEndCapture?: TransitionEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          TransitionEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onTransitionEndCapture
  - name: onVolumeChange
    uid: '@azure/communication-react.MicrophoneButtonProps.onVolumeChange'
    package: '@azure/communication-react'
    summary: ''
    fullName: onVolumeChange
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onVolumeChange?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onVolumeChange
  - name: onVolumeChangeCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onVolumeChangeCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onVolumeChangeCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onVolumeChangeCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onVolumeChangeCapture
  - name: onWaiting
    uid: '@azure/communication-react.MicrophoneButtonProps.onWaiting'
    package: '@azure/communication-react'
    summary: ''
    fullName: onWaiting
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onWaiting?: ReactEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onWaiting
  - name: onWaitingCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onWaitingCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onWaitingCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onWaitingCapture?: ReactEventHandler<HTMLAnchorElement |
        HTMLButtonElement | HTMLDivElement | BaseButton | Button |
        HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          ReactEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onWaitingCapture
  - name: onWheel
    uid: '@azure/communication-react.MicrophoneButtonProps.onWheel'
    package: '@azure/communication-react'
    summary: ''
    fullName: onWheel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onWheel?: WheelEventHandler<HTMLAnchorElement | HTMLButtonElement |
        HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          WheelEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onWheel
  - name: onWheelCapture
    uid: '@azure/communication-react.MicrophoneButtonProps.onWheelCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onWheelCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onWheelCapture?: WheelEventHandler<HTMLAnchorElement | HTMLButtonElement
        | HTMLDivElement | BaseButton | Button | HTMLSpanElement> | undefined
      return:
        description: ''
        type: >-
          WheelEventHandler&lt;HTMLAnchorElement | HTMLButtonElement |
          HTMLDivElement | BaseButton | Button | HTMLSpanElement&gt; | undefined
    inheritanceDescription: <b>Inherited From</b> DOMAttributes.onWheelCapture
  - name: open
    uid: '@azure/communication-react.MicrophoneButtonProps.open'
    package: '@azure/communication-react'
    summary: ''
    fullName: open
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'open?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.open
  - name: optimum
    uid: '@azure/communication-react.MicrophoneButtonProps.optimum'
    package: '@azure/communication-react'
    summary: ''
    fullName: optimum
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'optimum?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.optimum
  - name: pattern
    uid: '@azure/communication-react.MicrophoneButtonProps.pattern'
    package: '@azure/communication-react'
    summary: ''
    fullName: pattern
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'pattern?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.pattern
  - name: persistMenu
    uid: '@azure/communication-react.MicrophoneButtonProps.persistMenu'
    package: '@azure/communication-react'
    summary: >
      Menu will not be created or destroyed when opened or closed, instead it

      will be hidden. This will improve perf of the menu opening but could
      potentially

      impact overall perf by having more elements in the dom. Should only be
      used

      when menu perf is important.

      Note: This may increase the amount of time it takes for the button itself
      to mount.
    fullName: persistMenu
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'persistMenu?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IButtonProps.persistMenu
  - name: placeholder
    uid: '@azure/communication-react.MicrophoneButtonProps.placeholder'
    package: '@azure/communication-react'
    summary: ''
    fullName: placeholder
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'placeholder?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.placeholder
  - name: playsInline
    uid: '@azure/communication-react.MicrophoneButtonProps.playsInline'
    package: '@azure/communication-react'
    summary: ''
    fullName: playsInline
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'playsInline?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.playsInline
  - name: poster
    uid: '@azure/communication-react.MicrophoneButtonProps.poster'
    package: '@azure/communication-react'
    summary: ''
    fullName: poster
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'poster?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.poster
  - name: prefix
    uid: '@azure/communication-react.MicrophoneButtonProps.prefix'
    package: '@azure/communication-react'
    summary: ''
    fullName: prefix
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'prefix?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.prefix
  - name: preload
    uid: '@azure/communication-react.MicrophoneButtonProps.preload'
    package: '@azure/communication-react'
    summary: ''
    fullName: preload
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'preload?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.preload
  - name: primary
    uid: '@azure/communication-react.MicrophoneButtonProps.primary'
    package: '@azure/communication-react'
    summary: Changes the visual presentation of the button to be emphasized.
    fullName: primary
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'primary?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IButtonProps.primary
  - name: primaryActionButtonProps
    uid: '@azure/communication-react.MicrophoneButtonProps.primaryActionButtonProps'
    package: '@azure/communication-react'
    summary: >-
      Optional props to be applied only to the primary action button of
      SplitButton and not to the

      overall SplitButton container
    fullName: primaryActionButtonProps
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'primaryActionButtonProps?: IButtonProps'
      return:
        description: ''
        type: IButtonProps
    inheritanceDescription: <b>Inherited From</b> IButtonProps.primaryActionButtonProps
  - name: primaryDisabled
    uid: '@azure/communication-react.MicrophoneButtonProps.primaryDisabled'
    package: '@azure/communication-react'
    summary: >-
      If set to true and this is a split button (`split` is true), the split
      button's primary action is disabled.
    fullName: primaryDisabled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'primaryDisabled?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IButtonProps.primaryDisabled
  - name: property
    uid: '@azure/communication-react.MicrophoneButtonProps.property'
    package: '@azure/communication-react'
    summary: ''
    fullName: property
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'property?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.property
  - name: radioGroup
    uid: '@azure/communication-react.MicrophoneButtonProps.radioGroup'
    package: '@azure/communication-react'
    summary: ''
    fullName: radioGroup
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'radioGroup?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.radioGroup
  - name: readOnly
    uid: '@azure/communication-react.MicrophoneButtonProps.readOnly'
    package: '@azure/communication-react'
    summary: ''
    fullName: readOnly
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readOnly?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.readOnly
  - name: rel
    uid: '@azure/communication-react.MicrophoneButtonProps.rel'
    package: '@azure/communication-react'
    summary: ''
    fullName: rel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rel?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.rel
  - name: renderPersistedMenuHiddenOnMount
    uid: >-
      @azure/communication-react.MicrophoneButtonProps.renderPersistedMenuHiddenOnMount
    package: '@azure/communication-react'
    summary: >
      If true, the persisted menu is rendered hidden when the button initially
      mounts.

      Non-persisted menus will not be in the component tree unless they are
      being shown.

      Note: This increases the time the button will take to mount, but

      can improve perceived menu open perf. when the user opens the menu.
    fullName: renderPersistedMenuHiddenOnMount
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: |-
      There is known bug in Edge when this prop is true where scrollbars
      overlap with the content when a menu is first rendered hidden.
      Please do not start using this. If you are already using this,
      please make sure that you are doing so only in non-Edge browsers.
      See: https://github.com/microsoft/fluentui/issues/9034
    syntax:
      content: 'renderPersistedMenuHiddenOnMount?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IButtonProps.renderPersistedMenuHiddenOnMount
  - name: required
    uid: '@azure/communication-react.MicrophoneButtonProps.required'
    package: '@azure/communication-react'
    summary: ''
    fullName: required
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'required?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.required
  - name: resource
    uid: '@azure/communication-react.MicrophoneButtonProps.resource'
    package: '@azure/communication-react'
    summary: ''
    fullName: resource
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resource?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.resource
  - name: results
    uid: '@azure/communication-react.MicrophoneButtonProps.results'
    package: '@azure/communication-react'
    summary: ''
    fullName: results
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'results?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.results
  - name: reversed
    uid: '@azure/communication-react.MicrophoneButtonProps.reversed'
    package: '@azure/communication-react'
    summary: ''
    fullName: reversed
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'reversed?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.reversed
  - name: role
    uid: '@azure/communication-react.MicrophoneButtonProps.role'
    package: '@azure/communication-react'
    summary: ''
    fullName: role
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'role?: AriaRole | undefined'
      return:
        description: ''
        type: AriaRole | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.role
  - name: rootProps
    uid: '@azure/communication-react.MicrophoneButtonProps.rootProps'
    package: '@azure/communication-react'
    summary: ''
    fullName: rootProps
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: >-
      Deprecated at v0.56.2, to be removed at \>= v1.0.0.

      Use native props on the Button itself instead.

      They will be mixed into the button/anchor element rendered by the
      component.
    syntax:
      content: >-
        rootProps?: ButtonHTMLAttributes<HTMLButtonElement> |
        AnchorHTMLAttributes<HTMLAnchorElement>
      return:
        description: ''
        type: >-
          ButtonHTMLAttributes&lt;HTMLButtonElement&gt; |
          AnchorHTMLAttributes&lt;HTMLAnchorElement&gt;
    inheritanceDescription: <b>Inherited From</b> IButtonProps.rootProps
  - name: rows
    uid: '@azure/communication-react.MicrophoneButtonProps.rows'
    package: '@azure/communication-react'
    summary: ''
    fullName: rows
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rows?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.rows
  - name: rowSpan
    uid: '@azure/communication-react.MicrophoneButtonProps.rowSpan'
    package: '@azure/communication-react'
    summary: ''
    fullName: rowSpan
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rowSpan?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.rowSpan
  - name: sandbox
    uid: '@azure/communication-react.MicrophoneButtonProps.sandbox'
    package: '@azure/communication-react'
    summary: ''
    fullName: sandbox
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sandbox?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.sandbox
  - name: scope
    uid: '@azure/communication-react.MicrophoneButtonProps.scope'
    package: '@azure/communication-react'
    summary: ''
    fullName: scope
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'scope?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.scope
  - name: scoped
    uid: '@azure/communication-react.MicrophoneButtonProps.scoped'
    package: '@azure/communication-react'
    summary: ''
    fullName: scoped
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'scoped?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.scoped
  - name: scrolling
    uid: '@azure/communication-react.MicrophoneButtonProps.scrolling'
    package: '@azure/communication-react'
    summary: ''
    fullName: scrolling
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'scrolling?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.scrolling
  - name: seamless
    uid: '@azure/communication-react.MicrophoneButtonProps.seamless'
    package: '@azure/communication-react'
    summary: ''
    fullName: seamless
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'seamless?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.seamless
  - name: secondaryText
    uid: '@azure/communication-react.MicrophoneButtonProps.secondaryText'
    package: '@azure/communication-react'
    summary: |-
      Description of the action this button takes.
      Only used for compound buttons.
    fullName: secondaryText
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'secondaryText?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IButtonProps.secondaryText
  - name: security
    uid: '@azure/communication-react.MicrophoneButtonProps.security'
    package: '@azure/communication-react'
    summary: ''
    fullName: security
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'security?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.security
  - name: selected
    uid: '@azure/communication-react.MicrophoneButtonProps.selected'
    package: '@azure/communication-react'
    summary: ''
    fullName: selected
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selected?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.selected
  - name: shape
    uid: '@azure/communication-react.MicrophoneButtonProps.shape'
    package: '@azure/communication-react'
    summary: ''
    fullName: shape
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'shape?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.shape
  - name: showLabel
    uid: '@azure/communication-react.MicrophoneButtonProps.showLabel'
    package: '@azure/communication-react'
    summary: Whether the label is displayed or not.
    fullName: showLabel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showLabel?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ControlBarButtonProps.showLabel](xref:@azure/communication-react.ControlBarButtonProps.showLabel)
  - name: size
    uid: '@azure/communication-react.MicrophoneButtonProps.size'
    package: '@azure/communication-react'
    summary: ''
    fullName: size
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'size?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.size
  - name: sizes
    uid: '@azure/communication-react.MicrophoneButtonProps.sizes'
    package: '@azure/communication-react'
    summary: ''
    fullName: sizes
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sizes?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.sizes
  - name: slot
    uid: '@azure/communication-react.MicrophoneButtonProps.slot'
    package: '@azure/communication-react'
    summary: ''
    fullName: slot
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'slot?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.slot
  - name: span
    uid: '@azure/communication-react.MicrophoneButtonProps.span'
    package: '@azure/communication-react'
    summary: ''
    fullName: span
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'span?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.span
  - name: spellCheck
    uid: '@azure/communication-react.MicrophoneButtonProps.spellCheck'
    package: '@azure/communication-react'
    summary: ''
    fullName: spellCheck
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'spellCheck?: Booleanish | undefined'
      return:
        description: ''
        type: Booleanish | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.spellCheck
  - name: split
    uid: '@azure/communication-react.MicrophoneButtonProps.split'
    package: '@azure/communication-react'
    summary: >-
      If set to true, and if `menuProps` and `onClick` are provided, the button
      will render as a SplitButton.
    fullName: split
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'split?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IButtonProps.split
  - name: splitButtonAriaLabel
    uid: '@azure/communication-react.MicrophoneButtonProps.splitButtonAriaLabel'
    package: '@azure/communication-react'
    summary: Accessible label for the dropdown chevron button if this button is split.
    fullName: splitButtonAriaLabel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'splitButtonAriaLabel?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IButtonProps.splitButtonAriaLabel
  - name: splitButtonMenuProps
    uid: '@azure/communication-react.MicrophoneButtonProps.splitButtonMenuProps'
    package: '@azure/communication-react'
    summary: >-
      Experimental prop that get passed into the menuButton that's rendered as
      part of

      split button. Anything passed in will likely need to have accompanying

      style changes.
    fullName: splitButtonMenuProps
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'splitButtonMenuProps?: IButtonProps'
      return:
        description: ''
        type: IButtonProps
    inheritanceDescription: <b>Inherited From</b> IButtonProps.splitButtonMenuProps
  - name: src
    uid: '@azure/communication-react.MicrophoneButtonProps.src'
    package: '@azure/communication-react'
    summary: ''
    fullName: src
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'src?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.src
  - name: srcDoc
    uid: '@azure/communication-react.MicrophoneButtonProps.srcDoc'
    package: '@azure/communication-react'
    summary: ''
    fullName: srcDoc
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'srcDoc?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.srcDoc
  - name: srcLang
    uid: '@azure/communication-react.MicrophoneButtonProps.srcLang'
    package: '@azure/communication-react'
    summary: ''
    fullName: srcLang
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'srcLang?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.srcLang
  - name: srcSet
    uid: '@azure/communication-react.MicrophoneButtonProps.srcSet'
    package: '@azure/communication-react'
    summary: ''
    fullName: srcSet
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'srcSet?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.srcSet
  - name: start
    uid: '@azure/communication-react.MicrophoneButtonProps.start'
    package: '@azure/communication-react'
    summary: ''
    fullName: start
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'start?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.start
  - name: step
    uid: '@azure/communication-react.MicrophoneButtonProps.step'
    package: '@azure/communication-react'
    summary: ''
    fullName: step
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'step?: number | string | undefined'
      return:
        description: ''
        type: number | string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.step
  - name: style
    uid: '@azure/communication-react.MicrophoneButtonProps.style'
    package: '@azure/communication-react'
    summary: ''
    fullName: style
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'style?: CSSProperties | undefined'
      return:
        description: ''
        type: CSSProperties | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.style
  - name: styles
    uid: '@azure/communication-react.MicrophoneButtonProps.styles'
    package: '@azure/communication-react'
    summary: >-
      Fluent styles, including extensions common to all
      <xref:ControlBarButton>s.
    fullName: styles
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styles?: ControlBarButtonStyles'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.ControlBarButtonStyles" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ControlBarButtonProps.styles](xref:@azure/communication-react.ControlBarButtonProps.styles)
  - name: summary
    uid: '@azure/communication-react.MicrophoneButtonProps.summary'
    package: '@azure/communication-react'
    summary: ''
    fullName: summary
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'summary?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.summary
  - name: suppressContentEditableWarning
    uid: >-
      @azure/communication-react.MicrophoneButtonProps.suppressContentEditableWarning
    package: '@azure/communication-react'
    summary: ''
    fullName: suppressContentEditableWarning
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'suppressContentEditableWarning?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.suppressContentEditableWarning
  - name: suppressHydrationWarning
    uid: '@azure/communication-react.MicrophoneButtonProps.suppressHydrationWarning'
    package: '@azure/communication-react'
    summary: ''
    fullName: suppressHydrationWarning
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'suppressHydrationWarning?: boolean | undefined'
      return:
        description: ''
        type: boolean | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.suppressHydrationWarning
  - name: tabIndex
    uid: '@azure/communication-react.MicrophoneButtonProps.tabIndex'
    package: '@azure/communication-react'
    summary: ''
    fullName: tabIndex
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tabIndex?: number | undefined'
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.tabIndex
  - name: target
    uid: '@azure/communication-react.MicrophoneButtonProps.target'
    package: '@azure/communication-react'
    summary: ''
    fullName: target
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'target?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.target
  - name: text
    uid: '@azure/communication-react.MicrophoneButtonProps.text'
    package: '@azure/communication-react'
    summary: >-
      Text to render button label. If text is supplied, it will override any
      string in button children.

      Other children components will be passed through after the text.
    fullName: text
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'text?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IButtonProps.text
  - name: theme
    uid: '@azure/communication-react.MicrophoneButtonProps.theme'
    package: '@azure/communication-react'
    summary: Theme provided by HOC.
    fullName: theme
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme'
      return:
        description: ''
        type: ITheme
    inheritanceDescription: <b>Inherited From</b> IButtonProps.theme
  - name: title
    uid: '@azure/communication-react.MicrophoneButtonProps.title'
    package: '@azure/communication-react'
    summary: ''
    fullName: title
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'title?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.title
  - name: toggle
    uid: '@azure/communication-react.MicrophoneButtonProps.toggle'
    package: '@azure/communication-react'
    summary: >-
      Whether button is a toggle button with distinct on and off states. This
      should be true for buttons that permanently

      change state when a press event finishes, such as a volume mute button.
    fullName: toggle
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toggle?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IButtonProps.toggle
  - name: toggled
    uid: '@azure/communication-react.MicrophoneButtonProps.toggled'
    package: '@azure/communication-react'
    summary: ''
    fullName: toggled
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: No longer used. Use `checked` if setting state.
    syntax:
      content: 'toggled?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IButtonProps.toggled
  - name: tooltipId
    uid: '@azure/communication-react.MicrophoneButtonProps.tooltipId'
    package: '@azure/communication-react'
    summary: Id to use for the tooltip host.
    fullName: tooltipId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tooltipId?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ControlBarButtonProps.tooltipId](xref:@azure/communication-react.ControlBarButtonProps.tooltipId)
  - name: translate
    uid: '@azure/communication-react.MicrophoneButtonProps.translate'
    package: '@azure/communication-react'
    summary: ''
    fullName: translate
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'translate?: "yes" | "no" | undefined'
      return:
        description: ''
        type: '"yes" | "no" | undefined'
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.translate
  - name: type
    uid: '@azure/communication-react.MicrophoneButtonProps.type'
    package: '@azure/communication-react'
    summary: ''
    fullName: type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'type?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.type
  - name: typeof
    uid: '@azure/communication-react.MicrophoneButtonProps.typeof'
    package: '@azure/communication-react'
    summary: ''
    fullName: typeof
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'typeof?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.typeof
  - name: uniqueId
    uid: '@azure/communication-react.MicrophoneButtonProps.uniqueId'
    package: '@azure/communication-react'
    summary: Unique ID to identify the item. Typically a duplicate of key value.
    fullName: uniqueId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'uniqueId?: string | number'
      return:
        description: ''
        type: string | number
    inheritanceDescription: <b>Inherited From</b> IButtonProps.uniqueId
  - name: unselectable
    uid: '@azure/communication-react.MicrophoneButtonProps.unselectable'
    package: '@azure/communication-react'
    summary: ''
    fullName: unselectable
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'unselectable?: "on" | "off" | undefined'
      return:
        description: ''
        type: '"on" | "off" | undefined'
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.unselectable
  - name: useMap
    uid: '@azure/communication-react.MicrophoneButtonProps.useMap'
    package: '@azure/communication-react'
    summary: ''
    fullName: useMap
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'useMap?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.useMap
  - name: value
    uid: '@azure/communication-react.MicrophoneButtonProps.value'
    package: '@azure/communication-react'
    summary: ''
    fullName: value
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'value?: string | ReadonlyArray<string> | number | undefined'
      return:
        description: ''
        type: string | ReadonlyArray&lt;string&gt; | number | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.value
  - name: vocab
    uid: '@azure/communication-react.MicrophoneButtonProps.vocab'
    package: '@azure/communication-react'
    summary: ''
    fullName: vocab
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'vocab?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> HTMLAttributes.vocab
  - name: width
    uid: '@azure/communication-react.MicrophoneButtonProps.width'
    package: '@azure/communication-react'
    summary: ''
    fullName: width
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'width?: number | string | undefined'
      return:
        description: ''
        type: number | string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.width
  - name: wmode
    uid: '@azure/communication-react.MicrophoneButtonProps.wmode'
    package: '@azure/communication-react'
    summary: ''
    fullName: wmode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'wmode?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.wmode
  - name: wrap
    uid: '@azure/communication-react.MicrophoneButtonProps.wrap'
    package: '@azure/communication-react'
    summary: ''
    fullName: wrap
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'wrap?: string | undefined'
      return:
        description: ''
        type: string | undefined
    inheritanceDescription: <b>Inherited From</b> AllHTMLAttributes.wrap
extends: <xref uid="@azure/communication-react.ControlBarButtonProps" />
