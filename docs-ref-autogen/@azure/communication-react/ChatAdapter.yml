### YamlMime:TSType
name: ChatAdapter
uid: '@azure/communication-react.ChatAdapter'
package: '@azure/communication-react'
summary: '<xref:ChatComposite> Adapter interface.'
fullName: ChatAdapter
remarks: ''
isPreview: false
isDeprecated: false
type: interface
inheritedMethods:
  - name: deleteMessage(string)
    uid: '@azure/communication-react.ChatAdapter.deleteMessage'
    package: '@azure/communication-react'
    summary: Delete a message in the thread.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteMessage(messageId: string): Promise<void>'
      parameters:
        - id: messageId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterThreadManagement.deleteMessage](xref:@azure/communication-react.ChatAdapterThreadManagement.deleteMessage)
  - name: fetchInitialData()
    uid: '@azure/communication-react.ChatAdapter.fetchInitialData'
    package: '@azure/communication-react'
    summary: |
      Fetch initial state for the Chat adapter.
      Performs the minimal fetch necessary for ChatComposite and API methods.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function fetchInitialData(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterThreadManagement.fetchInitialData](xref:@azure/communication-react.ChatAdapterThreadManagement.fetchInitialData)
  - name: loadPreviousChatMessages(number)
    uid: '@azure/communication-react.ChatAdapter.loadPreviousChatMessages'
    package: '@azure/communication-react'
    summary: Load more previous messages in the chat thread history.
    remarks: This method is usually used to control incremental fetch/infinite scroll
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function loadPreviousChatMessages(messagesToLoad: number):
        Promise<boolean>
      parameters:
        - id: messagesToLoad
          type: number
          description: ''
      return:
        description: ''
        type: Promise&lt;boolean&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterThreadManagement.loadPreviousChatMessages](xref:@azure/communication-react.ChatAdapterThreadManagement.loadPreviousChatMessages)
  - name: 'off("error", (e: AdapterError) => void)'
    uid: '@azure/communication-react.ChatAdapter.off_6'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'error' event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "error", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterSubscribers.off](xref:@azure/communication-react.ChatAdapterSubscribers.off)
  - name: 'off("messageRead", MessageReadListener)'
    uid: '@azure/communication-react.ChatAdapter.off_2'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'messageRead' event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "messageRead", listener: MessageReadListener)'
      parameters:
        - id: event
          type: '"messageRead"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReadListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterSubscribers.off](xref:@azure/communication-react.ChatAdapterSubscribers.off)
  - name: 'off("messageReceived", MessageReceivedListener)'
    uid: '@azure/communication-react.ChatAdapter.off'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'messageReceived' event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "messageReceived", listener:
        MessageReceivedListener)
      parameters:
        - id: event
          type: '"messageReceived"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterSubscribers.off](xref:@azure/communication-react.ChatAdapterSubscribers.off)
  - name: 'off("messageSent", MessageSentListener)'
    uid: '@azure/communication-react.ChatAdapter.off_1'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'messageSent' event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "messageSent", listener: MessageSentListener)'
      parameters:
        - id: event
          type: '"messageSent"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageSentListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterSubscribers.off](xref:@azure/communication-react.ChatAdapterSubscribers.off)
  - name: 'off("participantsAdded", ParticipantsAddedListener)'
    uid: '@azure/communication-react.ChatAdapter.off_3'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'participantsAdded' event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "participantsAdded", listener:
        ParticipantsAddedListener)
      parameters:
        - id: event
          type: '"participantsAdded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsAddedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterSubscribers.off](xref:@azure/communication-react.ChatAdapterSubscribers.off)
  - name: 'off("participantsRemoved", ParticipantsRemovedListener)'
    uid: '@azure/communication-react.ChatAdapter.off_4'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'participantsRemoved' event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "participantsRemoved", listener:
        ParticipantsRemovedListener)
      parameters:
        - id: event
          type: '"participantsRemoved"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.ParticipantsRemovedListener"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterSubscribers.off](xref:@azure/communication-react.ChatAdapterSubscribers.off)
  - name: 'off("topicChanged", TopicChangedListener)'
    uid: '@azure/communication-react.ChatAdapter.off_5'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'topicChanged' event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "topicChanged", listener: TopicChangedListener)'
      parameters:
        - id: event
          type: '"topicChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.TopicChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterSubscribers.off](xref:@azure/communication-react.ChatAdapterSubscribers.off)
  - name: 'on("error", (e: AdapterError) => void)'
    uid: '@azure/communication-react.ChatAdapter.on_6'
    package: '@azure/communication-react'
    summary: Subscribe function for 'error' event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "error", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterSubscribers.on](xref:@azure/communication-react.ChatAdapterSubscribers.on)
  - name: 'on("messageRead", MessageReadListener)'
    uid: '@azure/communication-react.ChatAdapter.on_2'
    package: '@azure/communication-react'
    summary: Subscribe function for 'messageRead' event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageRead", listener: MessageReadListener)'
      parameters:
        - id: event
          type: '"messageRead"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReadListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterSubscribers.on](xref:@azure/communication-react.ChatAdapterSubscribers.on)
  - name: 'on("messageReceived", MessageReceivedListener)'
    uid: '@azure/communication-react.ChatAdapter.on'
    package: '@azure/communication-react'
    summary: Subscribe function for 'messageReceived' event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageReceived", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageReceived"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterSubscribers.on](xref:@azure/communication-react.ChatAdapterSubscribers.on)
  - name: 'on("messageSent", MessageSentListener)'
    uid: '@azure/communication-react.ChatAdapter.on_1'
    package: '@azure/communication-react'
    summary: Subscribe function for 'messageSent' event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageSent", listener: MessageSentListener)'
      parameters:
        - id: event
          type: '"messageSent"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageSentListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterSubscribers.on](xref:@azure/communication-react.ChatAdapterSubscribers.on)
  - name: 'on("participantsAdded", ParticipantsAddedListener)'
    uid: '@azure/communication-react.ChatAdapter.on_3'
    package: '@azure/communication-react'
    summary: Subscribe function for 'participantsAdded' event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "participantsAdded", listener:
        ParticipantsAddedListener)
      parameters:
        - id: event
          type: '"participantsAdded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsAddedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterSubscribers.on](xref:@azure/communication-react.ChatAdapterSubscribers.on)
  - name: 'on("participantsRemoved", ParticipantsRemovedListener)'
    uid: '@azure/communication-react.ChatAdapter.on_4'
    package: '@azure/communication-react'
    summary: Subscribe function for 'participantsRemoved' event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "participantsRemoved", listener:
        ParticipantsRemovedListener)
      parameters:
        - id: event
          type: '"participantsRemoved"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.ParticipantsRemovedListener"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterSubscribers.on](xref:@azure/communication-react.ChatAdapterSubscribers.on)
  - name: 'on("topicChanged", TopicChangedListener)'
    uid: '@azure/communication-react.ChatAdapter.on_5'
    package: '@azure/communication-react'
    summary: Subscribe function for 'topicChanged' event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "topicChanged", listener: TopicChangedListener)'
      parameters:
        - id: event
          type: '"topicChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.TopicChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterSubscribers.on](xref:@azure/communication-react.ChatAdapterSubscribers.on)
  - name: removeParticipant(string)
    uid: '@azure/communication-react.ChatAdapter.removeParticipant'
    package: '@azure/communication-react'
    summary: Remove a participant in the thread.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeParticipant(userId: string): Promise<void>'
      parameters:
        - id: userId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterThreadManagement.removeParticipant](xref:@azure/communication-react.ChatAdapterThreadManagement.removeParticipant)
  - name: sendMessage(string)
    uid: '@azure/communication-react.ChatAdapter.sendMessage'
    package: '@azure/communication-react'
    summary: Send a message in the thread.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendMessage(content: string): Promise<void>'
      parameters:
        - id: content
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterThreadManagement.sendMessage](xref:@azure/communication-react.ChatAdapterThreadManagement.sendMessage)
  - name: sendReadReceipt(string)
    uid: '@azure/communication-react.ChatAdapter.sendReadReceipt'
    package: '@azure/communication-react'
    summary: Send a read receipt for a message.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendReadReceipt(chatMessageId: string): Promise<void>'
      parameters:
        - id: chatMessageId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterThreadManagement.sendReadReceipt](xref:@azure/communication-react.ChatAdapterThreadManagement.sendReadReceipt)
  - name: sendTypingIndicator()
    uid: '@azure/communication-react.ChatAdapter.sendTypingIndicator'
    package: '@azure/communication-react'
    summary: Send typing indicator in the thread.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendTypingIndicator(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterThreadManagement.sendTypingIndicator](xref:@azure/communication-react.ChatAdapterThreadManagement.sendTypingIndicator)
  - name: setTopic(string)
    uid: '@azure/communication-react.ChatAdapter.setTopic'
    package: '@azure/communication-react'
    summary: Set the topic for the thread.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setTopic(topicName: string): Promise<void>'
      parameters:
        - id: topicName
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterThreadManagement.setTopic](xref:@azure/communication-react.ChatAdapterThreadManagement.setTopic)
  - name: 'updateMessage(string, string)'
    uid: '@azure/communication-react.ChatAdapter.updateMessage'
    package: '@azure/communication-react'
    summary: Update a message content.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateMessage(messageId: string, content: string):
        Promise<void>
      parameters:
        - id: messageId
          type: string
          description: ''
        - id: content
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChatAdapterThreadManagement.updateMessage](xref:@azure/communication-react.ChatAdapterThreadManagement.updateMessage)
extends: <xref uid="@azure/communication-react.ChatAdapterThreadManagement" />
