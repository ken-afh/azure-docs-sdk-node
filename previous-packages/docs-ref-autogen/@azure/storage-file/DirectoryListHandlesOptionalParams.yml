### YamlMime:TSType
name: DirectoryListHandlesOptionalParams
uid: '@azure/storage-file.DirectoryListHandlesOptionalParams'
package: '@azure/storage-file'
summary: Optional Parameters.
fullName: DirectoryListHandlesOptionalParams
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: marker
    uid: '@azure/storage-file.DirectoryListHandlesOptionalParams.marker'
    package: '@azure/storage-file'
    summary: >-
      A string value that identifies the portion of the list to be returned with
      the next list

      operation. The operation returns a marker value within the response body
      if the list returned

      was not complete. The marker value may then be used in a subsequent call
      to request the next

      set of list items. The marker value is opaque to the client.
    fullName: marker
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'marker?: undefined | string'
      return:
        description: ''
        type: undefined | string
  - name: maxresults
    uid: '@azure/storage-file.DirectoryListHandlesOptionalParams.maxresults'
    package: '@azure/storage-file'
    summary: >-
      Specifies the maximum number of entries to return. If the request does not
      specify maxresults,

      or specifies a value greater than 5,000, the server will return up to
      5,000 items.
    fullName: maxresults
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxresults?: undefined | number'
      return:
        description: ''
        type: undefined | number
  - name: recursive
    uid: '@azure/storage-file.DirectoryListHandlesOptionalParams.recursive'
    package: '@azure/storage-file'
    summary: >-
      Specifies operation should apply to the directory specified in the URI,
      its files, its

      subdirectories and their files.
    fullName: recursive
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'recursive?: undefined | false | true'
      return:
        description: ''
        type: undefined | false | true
  - name: sharesnapshot
    uid: '@azure/storage-file.DirectoryListHandlesOptionalParams.sharesnapshot'
    package: '@azure/storage-file'
    summary: >-
      The snapshot parameter is an opaque DateTime value that, when present,
      specifies the share

      snapshot to query.
    fullName: sharesnapshot
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sharesnapshot?: undefined | string'
      return:
        description: ''
        type: undefined | string
  - name: timeoutParameter
    uid: '@azure/storage-file.DirectoryListHandlesOptionalParams.timeoutParameter'
    package: '@azure/storage-file'
    summary: >-
      The timeout parameter is expressed in seconds. For more information, see
      <a

      href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN">Setting

      Timeouts for File Service Operations.</a>
    fullName: timeoutParameter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'timeoutParameter?: undefined | number'
      return:
        description: ''
        type: undefined | number
inheritedProperties:
  - name: abortSignal
    uid: '@azure/storage-file.DirectoryListHandlesOptionalParams.abortSignal'
    package: '@azure/storage-file'
    summary: The signal which can be used to abort requests.
    fullName: abortSignal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        description: ''
        type: AbortSignalLike
    inheritanceDescription: <b>Inherited From</b> RequestOptionsBase.abortSignal
  - name: customHeaders
    uid: '@azure/storage-file.DirectoryListHandlesOptionalParams.customHeaders'
    package: '@azure/storage-file'
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    fullName: customHeaders
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        description: ''
        type: 'undefined | [key: string]: string'
    inheritanceDescription: <b>Inherited From</b> RequestOptionsBase.customHeaders
  - name: onDownloadProgress
    uid: '@azure/storage-file.DirectoryListHandlesOptionalParams.onDownloadProgress'
    package: '@azure/storage-file'
    summary: Callback which fires upon download progress.
    fullName: onDownloadProgress
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        description: ''
        type: 'undefined | (progress: TransferProgressEvent) =&gt; void'
    inheritanceDescription: <b>Inherited From</b> RequestOptionsBase.onDownloadProgress
  - name: onUploadProgress
    uid: '@azure/storage-file.DirectoryListHandlesOptionalParams.onUploadProgress'
    package: '@azure/storage-file'
    summary: Callback which fires upon upload progress.
    fullName: onUploadProgress
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        description: ''
        type: 'undefined | (progress: TransferProgressEvent) =&gt; void'
    inheritanceDescription: <b>Inherited From</b> RequestOptionsBase.onUploadProgress
  - name: timeout
    uid: '@azure/storage-file.DirectoryListHandlesOptionalParams.timeout'
    package: '@azure/storage-file'
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    fullName: timeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'timeout?: undefined | number'
      return:
        description: ''
        type: undefined | number
    inheritanceDescription: <b>Inherited From</b> RequestOptionsBase.timeout
extends: RequestOptionsBase
