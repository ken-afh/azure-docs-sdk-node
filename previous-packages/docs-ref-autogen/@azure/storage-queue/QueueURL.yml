### YamlMime:TSType
name: QueueURL
uid: '@azure/storage-queue.QueueURL'
package: '@azure/storage-queue'
summary: A QueueURL represents a URL to the Azure Storage queue.
fullName: QueueURL
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'QueueURL(string, Pipeline)'
    uid: '@azure/storage-queue.QueueURL.constructor'
    package: '@azure/storage-queue'
    summary: Creates an instance of QueueURL.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new QueueURL(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type: string
          description: |-
            A URL string pointing to Azure Storage queue, such as
                                "https://myaccount.queue.core.windows.net/myqueue". You can
                                append a SAS if using AnonymousCredential, such as
                                "https://myaccount.queue.core.windows.net/myqueue?sasString".
        - id: pipeline
          type: <xref uid="@azure/storage-queue.Pipeline" />
          description: |-
            Call StorageURL.newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
inheritedProperties:
  - name: pipeline
    uid: '@azure/storage-queue.QueueURL.pipeline'
    package: '@azure/storage-queue'
    summary: Request policy pipeline.
    fullName: pipeline
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'pipeline: Pipeline'
      return:
        description: ''
        type: <xref uid="@azure/storage-queue.Pipeline" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [StorageURL.pipeline](xref:@azure/storage-queue.StorageURL.pipeline)
  - name: url
    uid: '@azure/storage-queue.QueueURL.url'
    package: '@azure/storage-queue'
    summary: URL string value.
    fullName: url
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'url: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [StorageURL.url](xref:@azure/storage-queue.StorageURL.url)
inheritedMethods:
  - name: 'newPipeline(Credential, INewPipelineOptions)'
    uid: '@azure/storage-queue.QueueURL.newPipeline'
    package: '@azure/storage-queue'
    summary: >-
      A static method used to create a new Pipeline object with Credential
      provided.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function newPipeline(credential: Credential, pipelineOptions?:
        INewPipelineOptions): Pipeline
      parameters:
        - id: credential
          type: <xref uid="@azure/storage-queue.Credential" />
          description: 'Such as AnonymousCredential, SharedKeyCredential or TokenCredential.'
        - id: pipelineOptions
          type: <xref uid="@azure/storage-queue.INewPipelineOptions" />
          description: ''
      return:
        description: A new Pipeline object.
        type: <xref uid="@azure/storage-queue.Pipeline" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [StorageURL.newPipeline](xref:@azure/storage-queue.StorageURL.newPipeline)
methods:
  - name: 'create(Aborter, IQueueCreateOptions)'
    uid: '@azure/storage-queue.QueueURL.create'
    package: '@azure/storage-queue'
    summary: >-
      Creates a new queue under the specified account.


      See
      https://docs.microsoft.com/en-us/rest/api/storageservices/create-queue4
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(aborter: Aborter, options?: IQueueCreateOptions):
        Promise<Models.QueueCreateResponse>
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-queue.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: options
          type: <xref uid="@azure/storage-queue.IQueueCreateOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="Models.QueueCreateResponse" />&gt;
  - name: delete(Aborter)
    uid: '@azure/storage-queue.QueueURL.delete'
    package: '@azure/storage-queue'
    summary: >-
      Deletes the specified queue permanently.


      See
      https://docs.microsoft.com/en-us/rest/api/storageservices/delete-queue3
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function delete(aborter: Aborter): Promise<Models.QueueDeleteResponse>'
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-queue.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
      return:
        description: ''
        type: Promise&lt;<xref uid="Models.QueueDeleteResponse" />&gt;
  - name: 'fromServiceURL(ServiceURL, string)'
    uid: '@azure/storage-queue.QueueURL.fromServiceURL'
    package: '@azure/storage-queue'
    summary: Creates a QueueURL object from ServiceURL
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function fromServiceURL(serviceURL: ServiceURL, queueName:
        string): QueueURL
      parameters:
        - id: serviceURL
          type: <xref uid="@azure/storage-queue.ServiceURL" />
          description: ''
        - id: queueName
          type: string
          description: |+

      return:
        description: ''
        type: <xref uid="@azure/storage-queue.QueueURL" />
  - name: getAccessPolicy(Aborter)
    uid: '@azure/storage-queue.QueueURL.getAccessPolicy'
    package: '@azure/storage-queue'
    summary: >-
      Gets details about any stored access policies specified on the queue that
      may be used with Shared Access Signatures.

      WARNING: JavaScript Date will potential lost precision when parsing start
      and expiry string.

      For example, new Date("2018-12-31T03:44:23.8827891Z").toISOString() will
      get "2018-12-31T03:44:23.882Z".



      See
      https://docs.microsoft.com/en-us/rest/api/storageservices/get-queue-acl
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAccessPolicy(aborter: Aborter):
        Promise<QueueGetAccessPolicyResponse>
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-queue.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-queue.QueueGetAccessPolicyResponse" />&gt;
  - name: getProperties(Aborter)
    uid: '@azure/storage-queue.QueueURL.getProperties'
    package: '@azure/storage-queue'
    summary: >-
      Gets all user-defined metadata and system properties for the specified

      queue. Metadata is associated with the queue as name-values pairs.


      See
      https://docs.microsoft.com/en-us/rest/api/storageservices/get-queue-metadata
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProperties(aborter: Aborter):
        Promise<Models.QueueGetPropertiesResponse>
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-queue.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
      return:
        description: ''
        type: Promise&lt;<xref uid="Models.QueueGetPropertiesResponse" />&gt;
  - name: 'setAccessPolicy(Aborter, ISignedIdentifier[])'
    uid: '@azure/storage-queue.QueueURL.setAccessPolicy'
    package: '@azure/storage-queue'
    summary: >-
      Sets stored access policies for the queue that may be used with Shared
      Access Signatures.


      See
      https://docs.microsoft.com/en-us/rest/api/storageservices/set-queue-acl
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setAccessPolicy(aborter: Aborter, queueAcl?:
        ISignedIdentifier[]): Promise<Models.QueueSetAccessPolicyResponse>
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-queue.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: queueAcl
          type: '<xref uid="@azure/storage-queue.ISignedIdentifier" />[]'
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="Models.QueueSetAccessPolicyResponse" />&gt;
  - name: 'setMetadata(Aborter, IMetadata)'
    uid: '@azure/storage-queue.QueueURL.setMetadata'
    package: '@azure/storage-queue'
    summary: >-
      Sets one or more user-defined name-value pairs for the specified queue.

      If no option provided, or no metadata defined in the option parameter, the
      queue

      metadata will be removed.


      See
      https://docs.microsoft.com/en-us/rest/api/storageservices/set-queue-metadata
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setMetadata(aborter: Aborter, metadata?: IMetadata):
        Promise<Models.QueueSetMetadataResponse>
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-queue.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: metadata
          type: <xref uid="@azure/storage-queue.IMetadata" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="Models.QueueSetMetadataResponse" />&gt;
  - name: withPipeline(Pipeline)
    uid: '@azure/storage-queue.QueueURL.withPipeline'
    package: '@azure/storage-queue'
    summary: |-
      Creates a new QueueURL object identical to the source but with the
      specified request policy pipeline.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function withPipeline(pipeline: Pipeline): QueueURL'
      parameters:
        - id: pipeline
          type: <xref uid="@azure/storage-queue.Pipeline" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/storage-queue.QueueURL" />
extends: <xref uid="@azure/storage-queue.StorageURL" />
