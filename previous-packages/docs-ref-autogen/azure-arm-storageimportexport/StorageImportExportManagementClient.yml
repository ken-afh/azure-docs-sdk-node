### YamlMime:TSType
name: StorageImportExportManagementClient
uid: azure-arm-storageimportexport.StorageImportExportManagementClient
package: azure-arm-storageimportexport
summary: ''
fullName: StorageImportExportManagementClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      StorageImportExportManagementClient(ServiceClientCredentials, string,
      string, AzureServiceClientOptions)
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.constructor
    package: azure-arm-storageimportexport
    summary: >-
      Initializes a new instance of the StorageImportExportManagementClient
      class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new StorageImportExportManagementClient(credentials:
        ServiceClientCredentials, subscriptionId: string, baseUri?: string,
        options?: AzureServiceClientOptions)
      parameters:
        - id: credentials
          type: ServiceClientCredentials
          description: |
            Credentials needed for the client to connect to Azure.
        - id: subscriptionId
          type: string
          description: |
            The subscription ID for the Azure user.
        - id: baseUri
          type: string
          description: ''
        - id: options
          type: AzureServiceClientOptions
          description: ''
properties:
  - name: acceptLanguage
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.acceptLanguage
    package: azure-arm-storageimportexport
    summary: ''
    fullName: acceptLanguage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'acceptLanguage: string'
      return:
        description: ''
        type: string
  - name: apiVersion
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.apiVersion
    package: azure-arm-storageimportexport
    summary: ''
    fullName: apiVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'apiVersion: string'
      return:
        description: ''
        type: string
  - name: credentials
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.credentials
    package: azure-arm-storageimportexport
    summary: ''
    fullName: credentials
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        description: ''
        type: ServiceClientCredentials
  - name: generateClientRequestId
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.generateClientRequestId
    package: azure-arm-storageimportexport
    summary: ''
    fullName: generateClientRequestId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'generateClientRequestId: boolean'
      return:
        description: ''
        type: boolean
  - name: jobs
    uid: azure-arm-storageimportexport.StorageImportExportManagementClient.jobs
    package: azure-arm-storageimportexport
    summary: ''
    fullName: jobs
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'jobs: Jobs'
      return:
        description: ''
        type: <xref uid="azure-arm-storageimportexport.Jobs" />
  - name: longRunningOperationRetryTimeout
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.longRunningOperationRetryTimeout
    package: azure-arm-storageimportexport
    summary: ''
    fullName: longRunningOperationRetryTimeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'longRunningOperationRetryTimeout: number'
      return:
        description: ''
        type: number
  - name: subscriptionId
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.subscriptionId
    package: azure-arm-storageimportexport
    summary: ''
    fullName: subscriptionId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'subscriptionId: string'
      return:
        description: ''
        type: string
inheritedMethods:
  - name: addUserAgentInfo(any)
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.addUserAgentInfo
    package: azure-arm-storageimportexport
    summary: Adds custom information to user agent header
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addUserAgentInfo(additionalUserAgentInfo: any)'
      parameters:
        - id: additionalUserAgentInfo
          type: any
          description: |
            information to be added to user agent header, as string.
    inheritanceDescription: <b>Inherited From</b> ServiceClient.addUserAgentInfo
  - name: >-
      getLongRunningOperationResult<TResult>(HttpOperationResponse<TResult>,
      RequestOptions)
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.getLongRunningOperationResult_2
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLongRunningOperationResult<TResult>(resultOfInitialRequest:
        HttpOperationResponse<TResult>, options?: RequestOptions):
        Promise<TResult>
      parameters:
        - id: resultOfInitialRequest
          type: HttpOperationResponse&lt;TResult&gt;
          description: ''
        - id: options
          type: RequestOptions
          description: ''
      return:
        description: ''
        type: Promise&lt;TResult&gt;
    inheritanceDescription: <b>Inherited From</b> AzureServiceClient.getLongRunningOperationResult
  - name: >-
      getLongRunningOperationResult<TResult>(HttpOperationResponse<TResult>,
      RequestOptions, ServiceCallback<TResult>)
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.getLongRunningOperationResult
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLongRunningOperationResult<TResult>(resultOfInitialRequest:
        HttpOperationResponse<TResult>, options: RequestOptions, callback:
        ServiceCallback<TResult>)
      parameters:
        - id: resultOfInitialRequest
          type: HttpOperationResponse&lt;TResult&gt;
          description: ''
        - id: options
          type: RequestOptions
          description: ''
        - id: callback
          type: ServiceCallback&lt;TResult&gt;
          description: ''
    inheritanceDescription: <b>Inherited From</b> AzureServiceClient.getLongRunningOperationResult
  - name: >-
      getLongRunningOperationResult<TResult>(HttpOperationResponse<TResult>,
      ServiceCallback<TResult>)
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.getLongRunningOperationResult_1
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLongRunningOperationResult<TResult>(resultOfInitialRequest:
        HttpOperationResponse<TResult>, callback: ServiceCallback<TResult>)
      parameters:
        - id: resultOfInitialRequest
          type: HttpOperationResponse&lt;TResult&gt;
          description: ''
        - id: callback
          type: ServiceCallback&lt;TResult&gt;
          description: ''
    inheritanceDescription: <b>Inherited From</b> AzureServiceClient.getLongRunningOperationResult
  - name: getPackageJsonInfo(string)
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.getPackageJsonInfo
    package: azure-arm-storageimportexport
    summary: >-
      Attempts to find package.json for the given azure nodejs package.

      If found, returns the name and version of the package by reading the
      package.json

      If package.json is not found, returns a default value.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPackageJsonInfo(managementClientDir: string): { name:
        string, version: string }
      parameters:
        - id: managementClientDir
          type: string
          description: pass the directory of the specific azure management client.
      return:
        description: packageJsonInfo - "name" and "version" of the desired package.
        type: '{ name: string, version: string }'
    inheritanceDescription: <b>Inherited From</b> ServiceClient.getPackageJsonInfo
  - name: >-
      sendLongRunningRequest<TResult>(LongRunningUrlBasedRequestPrepareOptions |
      LongRunningPathTemplateBasedRequestPrepareOptions)
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.sendLongRunningRequest_1
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLongRunningRequest<TResult>(options:
        LongRunningUrlBasedRequestPrepareOptions |
        LongRunningPathTemplateBasedRequestPrepareOptions): Promise<TResult>
      parameters:
        - id: options
          type: >-
            LongRunningUrlBasedRequestPrepareOptions |
            LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
      return:
        description: ''
        type: Promise&lt;TResult&gt;
    inheritanceDescription: <b>Inherited From</b> AzureServiceClient.sendLongRunningRequest
  - name: >-
      sendLongRunningRequest<TResult>(LongRunningUrlBasedRequestPrepareOptions |
      LongRunningPathTemplateBasedRequestPrepareOptions,
      ServiceCallback<TResult>)
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.sendLongRunningRequest
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLongRunningRequest<TResult>(options:
        LongRunningUrlBasedRequestPrepareOptions |
        LongRunningPathTemplateBasedRequestPrepareOptions, callback:
        ServiceCallback<TResult>)
      parameters:
        - id: options
          type: >-
            LongRunningUrlBasedRequestPrepareOptions |
            LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
        - id: callback
          type: ServiceCallback&lt;TResult&gt;
          description: ''
    inheritanceDescription: <b>Inherited From</b> AzureServiceClient.sendLongRunningRequest
  - name: >-
      sendLongRunningRequestWithHttpOperationResponse<TResult>(LongRunningUrlBasedRequestPrepareOptions
      | LongRunningPathTemplateBasedRequestPrepareOptions)
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.sendLongRunningRequestWithHttpOperationResponse
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        sendLongRunningRequestWithHttpOperationResponse<TResult>(options:
        LongRunningUrlBasedRequestPrepareOptions |
        LongRunningPathTemplateBasedRequestPrepareOptions):
        Promise<HttpOperationResponse<TResult>>
      parameters:
        - id: options
          type: >-
            LongRunningUrlBasedRequestPrepareOptions |
            LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
      return:
        description: ''
        type: Promise&lt;HttpOperationResponse&lt;TResult&gt;&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      AzureServiceClient.sendLongRunningRequestWithHttpOperationResponse
  - name: >-
      sendRequest<TResult>(PathTemplateBasedRequestPrepareOptions |
      UrlBasedRequestPrepareOptions)
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.sendRequest_1
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendRequest<TResult>(options:
        PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions):
        Promise<TResult>
      parameters:
        - id: options
          type: >-
            PathTemplateBasedRequestPrepareOptions |
            UrlBasedRequestPrepareOptions
          description: ''
      return:
        description: ''
        type: Promise&lt;TResult&gt;
    inheritanceDescription: <b>Inherited From</b> ServiceClient.sendRequest
  - name: >-
      sendRequest<TResult>(PathTemplateBasedRequestPrepareOptions |
      UrlBasedRequestPrepareOptions, ServiceCallback<TResult>)
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.sendRequest
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendRequest<TResult>(options:
        PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions,
        callback: ServiceCallback<TResult>)
      parameters:
        - id: options
          type: >-
            PathTemplateBasedRequestPrepareOptions |
            UrlBasedRequestPrepareOptions
          description: ''
        - id: callback
          type: ServiceCallback&lt;TResult&gt;
          description: ''
    inheritanceDescription: <b>Inherited From</b> ServiceClient.sendRequest
  - name: >-
      sendRequestWithHttpOperationResponse<TResult>(PathTemplateBasedRequestPrepareOptions
      | UrlBasedRequestPrepareOptions)
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.sendRequestWithHttpOperationResponse
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendRequestWithHttpOperationResponse<TResult>(options:
        PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions):
        Promise<HttpOperationResponse<TResult>>
      parameters:
        - id: options
          type: >-
            PathTemplateBasedRequestPrepareOptions |
            UrlBasedRequestPrepareOptions
          description: ''
      return:
        description: ''
        type: Promise&lt;HttpOperationResponse&lt;TResult&gt;&gt;
    inheritanceDescription: <b>Inherited From</b> ServiceClient.sendRequestWithHttpOperationResponse
methods:
  - name: 'getLocation(string, ServiceCallback<Location>)'
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.getLocation_1
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLocation(locationName: string, callback:
        ServiceCallback<Location>)
      parameters:
        - id: locationName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-storageimportexport.Location" />&gt;
          description: ''
  - name: 'getLocation(string, { customHeaders?: [key: string]: string })'
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.getLocation
    package: azure-arm-storageimportexport
    summary: >-
      Gets a location to which you can ship the disks associated with an import
      or

      export job. A location is an Azure region.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLocation(locationName: string, options?: { customHeaders?:
        [key: string]: string }): Promise<Location>
      parameters:
        - id: locationName
          type: string
          description: |
            The name of the location. For example, 'West
            US' or 'westus'.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Location} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Location} [result]   - The deserialized result object if an error did not occur.
                               See {@link Location} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-storageimportexport.Location" />&gt;
  - name: >-
      getLocation(string, { customHeaders?: [key: string]: string },
      ServiceCallback<Location>)
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.getLocation_2
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLocation(locationName: string, options: { customHeaders?:
        [key: string]: string }, callback: ServiceCallback<Location>)
      parameters:
        - id: locationName
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-storageimportexport.Location" />&gt;
          description: ''
  - name: >-
      getLocationWithHttpOperationResponse(string, { customHeaders?: [key:
      string]: string })
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.getLocationWithHttpOperationResponse
    package: azure-arm-storageimportexport
    summary: >-
      Gets a location to which you can ship the disks associated with an import
      or

      export job. A location is an Azure region.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLocationWithHttpOperationResponse(locationName: string,
        options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<Location>>
      parameters:
        - id: locationName
          type: string
          description: |
            The name of the location. For example, 'West
            US' or 'westus'.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-storageimportexport.Location" />&gt;&gt;
  - name: listLocations(ServiceCallback<LocationsListResult>)
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.listLocations_1
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listLocations(callback: ServiceCallback<LocationsListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-storageimportexport.LocationsListResult" />&gt;
          description: ''
  - name: 'listLocations({ customHeaders?: [key: string]: string })'
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.listLocations
    package: azure-arm-storageimportexport
    summary: >-
      Returns a list of locations to which you can ship the disks associated
      with

      an import or export job. A location is a Microsoft data center region.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listLocations(options?: { customHeaders?: [key: string]: string
        }): Promise<LocationsListResult>
      parameters:
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {LocationsListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {LocationsListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link LocationsListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref
          uid="azure-arm-storageimportexport.LocationsListResult" />&gt;
  - name: >-
      listLocations({ customHeaders?: [key: string]: string },
      ServiceCallback<LocationsListResult>)
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.listLocations_2
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listLocations(options: { customHeaders?: [key: string]: string
        }, callback: ServiceCallback<LocationsListResult>)
      parameters:
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-storageimportexport.LocationsListResult" />&gt;
          description: ''
  - name: >-
      listLocationsWithHttpOperationResponse({ customHeaders?: [key: string]:
      string })
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.listLocationsWithHttpOperationResponse
    package: azure-arm-storageimportexport
    summary: >-
      Returns a list of locations to which you can ship the disks associated
      with

      an import or export job. A location is a Microsoft data center region.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listLocationsWithHttpOperationResponse(options?: {
        customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<LocationsListResult>>
      parameters:
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-storageimportexport.LocationsListResult" />&gt;&gt;
  - name: listSupportedOperations(ServiceCallback<SupportedOperationsListResult>)
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.listSupportedOperations_1
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSupportedOperations(callback:
        ServiceCallback<SupportedOperationsListResult>)
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-storageimportexport.SupportedOperationsListResult"
            />&gt;
          description: ''
  - name: 'listSupportedOperations({ customHeaders?: [key: string]: string })'
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.listSupportedOperations
    package: azure-arm-storageimportexport
    summary: |-
      Returns the list of operations supported by the import/export resource
      provider.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSupportedOperations(options?: { customHeaders?: [key:
        string]: string }): Promise<SupportedOperationsListResult>
      parameters:
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SupportedOperationsListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SupportedOperationsListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link SupportedOperationsListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref
          uid="azure-arm-storageimportexport.SupportedOperationsListResult"
          />&gt;
  - name: >-
      listSupportedOperations({ customHeaders?: [key: string]: string },
      ServiceCallback<SupportedOperationsListResult>)
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.listSupportedOperations_2
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSupportedOperations(options: { customHeaders?: [key:
        string]: string }, callback:
        ServiceCallback<SupportedOperationsListResult>)
      parameters:
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-storageimportexport.SupportedOperationsListResult"
            />&gt;
          description: ''
  - name: >-
      listSupportedOperationsWithHttpOperationResponse({ customHeaders?: [key:
      string]: string })
    uid: >-
      azure-arm-storageimportexport.StorageImportExportManagementClient.listSupportedOperationsWithHttpOperationResponse
    package: azure-arm-storageimportexport
    summary: |-
      Returns the list of operations supported by the import/export resource
      provider.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSupportedOperationsWithHttpOperationResponse(options?: {
        customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<SupportedOperationsListResult>>
      parameters:
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-storageimportexport.SupportedOperationsListResult"
          />&gt;&gt;
extends: AzureServiceClient
